{"version":3,"sources":["models/ClientTypeModel.ts","Redux/CompaniesState.ts","Redux/AuthState.ts","Redux/CouponsStartState.ts","Redux/CouponsState.ts","Redux/CustomersState.ts","Redux/Store.ts","Services/Globals.ts","Services/InterceptorAxios.tsx","Services/Notification.ts","models/CategoryTypeModel.ts","Components/Admin/Admin-CompanyArea/AdminCompanyDetails/AdminCompanyDetails.tsx","Components/Company/CompanyCouponDetails/CompanyCouponDetails.tsx","Components/Forms/Login/Login.tsx","Components/Forms/Logout/Logout.tsx","Components/SharedArea/Page404/Page404.tsx","Components/HomeArea/Home/Home.tsx","Components/SharedArea/EmptyView/EmptyView.tsx","Components/Coupons/CouponCards/CouponCards.tsx","Components/Coupons/CouponDetails/CouponDetails.tsx","Components/Forms/AddCoupon/AddCoupon.tsx","Components/Forms/AddCompany/AddCompany.tsx","Components/Forms/AddCustomer/AddCustomer.tsx","Components/Admin/Admin-CompanyArea/AdminCompanyCards/AdminCompanyCards.tsx","Components/Customer/CustomerCouponDetails/CustomerCouponDetails.tsx","Components/Customer/CustomerCouponCards/CustomerCouponCards.tsx","Components/Company/CompanyCouponCards/CompanyCouponCards.tsx","Components/Forms/SignUp/SignUp.tsx","Components/Forms/SignUp/CompanySignUp/CompanySignUp.tsx","Components/Forms/SignUp/CustomerSignUp/CustomerSignUp.tsx","Components/Admin/Admin-CustomerArea/AdminCustomerCards/AdminCustomerCards.tsx","Components/Admin/Admin-CustomerArea/AdminCustomerDetails/AdminCustomerDetails.tsx","Components/LayoutArea/Terms/Terms.tsx","Components/SharedArea/About/About.tsx","Components/HomeArea/Routing/Routing.tsx","Components/LayoutArea/AuthMenu/AuthMenu.tsx","Components/LayoutArea/Navbars/IndexNavbar.tsx","Components/LayoutArea/PageHeader/PageHeader.tsx","Components/LayoutArea/Layout/Layout.tsx","reportWebVitals.ts","index.tsx","assets/img/square-purple-1.png"],"names":["ClientType","CompaniesActionType","CompaniesAppState","companies","companiesDownloadedAction","type","CompaniesDownloaded","payload","companyAddedAction","company","CompanyAdded","companyUpdatedAction","CompanyUpdated","companyDeletedAction","id","CompanyDeleted","AuthActionType","AuthState","client","storedUser","JSON","parse","localStorage","getItem","this","registerAction1","SignUp","registerAction2","customer","loginAction","Login","CouponsStartActionType","CouponsStartAppState","coupons","couponsStartDownloadedAction","CouponsStartDownloaded","CouponsActionType","CouponsAppState","couponsDownloadedAction","CouponsDownloaded","couponAddedAction","coupon","CouponAdded","couponAddedAction2","couponUpdatedAction","CouponUpdated","couponsDeletedAction","CouponDeleted","couponsClearedAction","CouponsCleared","CustomerActionType","CustomersAppState","customers","customersDownloadedAction","CustomersDownloaded","customerAddedAction","CustomerAdded","customerUpdatedAction","CustomerUpdated","customerDeletedAction","CustomerDeleted","reducers","combineReducers","couponsState","currentState","action","newState","push","idx","findIndex","c","filter","customersState","companiesState","CompanyDownloaded","authLoginState","setItem","stringify","Logout","removeItem","couponsStartState","CouponStartAdded","CouponStartUpdated","CouponStartDeleted","store","createStore","Globals","globals","urls","admin","tokenAxios","axios","create","interceptors","request","use","headers","getState","token","SccMsg","ErrMsg","Notify","notification","Notyf","duration","position","x","y","message","success","err","msg","extractMsg","error","response","data","Array","isArray","CategoryType","notify","AdminCompanyDetails","props","match","params","useState","find","setCompany","useForm","mode","register","handleSubmit","formState","errors","isDirty","isValid","history","useHistory","setCompanies","disabled","setDisabled","name","setName","email","setEmail","password","setPassword","updateCompany","a","put","dispatch","UPDATED_SUCCESS","fetchCompany","useEffect","clientType","PLS_LOGIN","subscribe","deleteCompany","window","confirm","delete","DELETED_SUCCESS","handleName","e","target","value","handleEmail","handlePassword","className","onSubmit","onClick","defaultValue","required","onChange","minLength","size","to","CompanyCouponDetails","setCoupon","setCoupons","amount","setAmount","categoryType","category","setCategory","description","setDescription","startDate","setStartDate","endDate","setEndDate","price","setPrice","title","setTitle","fetchCoupon","updateCoupon","companyId","clientId","deleteCoupon","handleDescription","handleAmount","handleCategory","handleEndDate","handleStartDate","handlePrice","handleTitle","src","alt","step","min","hidden","food","electronics","restaurant","vacation","lifeStyle","React","emailFocus","setEmailFocus","passwordFocus","setPasswordFocus","credentials","post","LOGIN_SUCCESS","Container","Row","Col","lg","Card","CardHeader","CardImg","require","default","CardTitle","tag","CardBody","Form","InputGroup","classnames","InputGroupAddon","addonType","InputGroupText","placeholder","onFocus","onBlur","ClientTypeModel","FormGroup","check","Label","exact","CardFooter","color","logOut","LOGOUT_SUCCESS","Page404","width","height","frameBorder","allowFullScreen","Home","setCount","EmptyView","CouponCards","search","setSearch","filteredCoupons","setFilteredCoupons","length","fetchCoupons","get","DOWNLOADED_COUPONS","NO_COUPONS","toLowerCase","includes","spellCheck","map","CouponDetails","purchase","PURCHASED_COUPON","AddCoupon","formData","FormData","append","toString","image","item","added","ADDED_COUPON","accept","variant","AddCompany","nameFocus","setNameFocus","ADDED_COMPANY","unsubscribe","AddCustomer","fullNameFocus","setFullNameFocus","fullLastNameFocus","setFullLastNameFocus","setCustomers","firstName","lastName","ADDED_CUSTOMER","href","preventDefault","AdminCompanyCards","fetchCompanies","DOWNLOADED_COMPANIES","NO_COMPANIES","CustomerCouponDetails","COUPON_LOADED","CustomerCouponCards","count","CompanyCouponCards","CompanySignUp","REGISTER_SUCCESS","CustomerSignUp","AdminCustomerCards","fetchCustomers","AdminCustomerDetails","setCustomer","setFirstName","setLastName","updateCustomer","fetchCustomer","deleteCustomer","handleFirstName","handleLastName","Terms","About","rel","Routing","path","component","from","AuthMenu","setClient","clientName","activeClassName","IndexNavbar","collapseOpen","setCollapseOpen","collapseOut","setCollapseOut","setColor","addEventListener","changeColor","removeEventListener","document","documentElement","scrollTop","body","toggleCollapse","classList","toggle","Navbar","expand","NavbarBrand","Link","UncontrolledTooltip","placement","Collapse","navbar","isOpen","onExiting","onExited","xs","Nav","UncontrolledDropdown","nav","DropdownToggle","caret","DropdownMenu","DropdownItem","PageHeader","Layout","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","Fragment","getElementById"],"mappings":"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","file":"static/js/main.72e402a7.chunk.js","sourcesContent":["enum ClientType {\n    admin = \"ADMINISTRATOR\",\n    company = \"COMPANY\",\n    customer = \"CUSTOMER\",\n};\nexport default ClientType;","import CompanyModel from \"../models/CompanyModel\";\n\nexport class CompaniesAppState {\n    public companies: CompanyModel[] = [];\n};\n\nexport enum CompaniesActionType {\n    CompaniesDownloaded= \"CompaniesDownloaded\",\n    CompanyAdded = \"CompanyAdded\",\n    CompanyUpdated = \"CompanyUpdated\",\n    CompanyDeleted = \"CompanyDeleted\",\n    CompanyDownloaded = \"CompanyDownloaded\"\n};\n\nexport interface CompanyAction {\n    type: CompaniesActionType;\n    payload?: any;\n};\n\nexport function companiesDownloadedAction(companies: CompanyModel[]): CompanyAction {\n    return { type: CompaniesActionType.CompaniesDownloaded, payload: companies };\n};\nexport function companyDownloadedAction(id: number): CompanyAction {\n    return { type: CompaniesActionType.CompaniesDownloaded, payload: id };\n};\nexport function companyAddedAction(company: CompanyModel): CompanyAction {\n    return { type: CompaniesActionType.CompanyAdded, payload: company };\n};\nexport function companyUpdatedAction(company: CompanyModel): CompanyAction {\n    return { type: CompaniesActionType.CompanyUpdated, payload: company };\n};\nexport function companyDeletedAction(id:number): CompanyAction {\n    return { type: CompaniesActionType.CompanyDeleted, payload: id };\n};\n\nexport function companiesReducer(currentState: CompaniesAppState = new CompaniesAppState(),action:CompanyAction): CompaniesAppState{\n    \n    const newState = {...currentState}; \n    \n    switch (action.type) {\n        case CompaniesActionType.CompaniesDownloaded:\n            newState.companies = action.payload;\n            break;\n            case CompaniesActionType.CompanyDownloaded:\n                newState.companies = action.payload;\n                break;\n        case CompaniesActionType.CompanyAdded:\n            newState.companies.push(action.payload);\n            break;\n\n        case CompaniesActionType.CompanyUpdated:\n\n            const idx = newState.companies.findIndex(c => c.id === action.payload.id);\n            newState.companies[idx] = action.payload;\n            break;\n        case CompaniesActionType.CompanyDeleted:\n            newState.companies = newState.companies.filter(c=>c.id !== action.payload);\n            break;\n    };\n\n    return newState;\n};","import ClientModel from \"../models/ClientModel\";\nimport CustomerSignUpModel from \"../models/CustomerSignUpModel\";\nimport CompanySignUpModel from \"../models/CompanySignUpModel\";\n\nexport class AuthState{\n    public client: ClientModel =null;\n    public constructor(){\n        const storedUser = JSON.parse(localStorage.getItem('client'));\n            if(storedUser) {\n                this.client = storedUser;\n            };\n    };\n};\n\nexport enum AuthActionType {\n    SignUp = \"SignUp\",\n    Login = \"Login\",\n    Logout = \"Logout\"\n};\n\nexport interface AuthAction {\n    type: AuthActionType;\n    payload?: any;\n};\n\nexport function registerAction1(company: CompanySignUpModel): AuthAction {\n    return { type: AuthActionType.SignUp,payload:company };\n};\nexport function registerAction2(customer: CustomerSignUpModel): AuthAction {\n    return { type: AuthActionType.SignUp,payload:customer };\n};\nexport function loginAction(client: ClientModel): AuthAction {\n    return { type: AuthActionType.Login ,payload:client};\n};\nexport function logoutAction(): AuthAction {\n    return { type: AuthActionType.Logout};\n};\nexport function authReducer(currentState: AuthState = new AuthState(),\n                            action:AuthAction): AuthState{\n    const newState = {...currentState};\n    switch(action.type){\n        case AuthActionType.SignUp: \n            newState.client = action.payload;\n            localStorage.setItem(\"client\",JSON.stringify(newState.client)); \n            break;\n        case AuthActionType.Login:\n            newState.client = action.payload;\n            localStorage.setItem(\"client\",JSON.stringify(newState.client)); \n            break;\n        case AuthActionType.Logout:\n            newState.client = null;\n            localStorage.removeItem(\"client\");\n            break;      \n    };\n    return newState; \n};","import CouponModel from \"../models/CouponModel\";\n\nexport class CouponsStartAppState {\n    public coupons: CouponModel[] = [];\n};\n\nexport enum CouponsStartActionType {\n    CouponsStartDownloaded= \"CouponsStartDownloaded\",\n    CouponStartAdded = \"CouponStartAdded\",\n    CouponStartUpdated = \"CouponStartUpdated\",\n    CouponStartDeleted = \"CouponStartDeleted\"\n};\n\nexport interface CouponStartAction {\n    type: CouponsStartActionType;\n    payload?: any;\n};\n\nexport function couponsStartDownloadedAction(coupons: CouponModel[]): CouponStartAction {\n    return { type: CouponsStartActionType.CouponsStartDownloaded, payload: coupons };\n};\nexport function couponStartAddedAction(coupon: CouponModel): CouponStartAction {\n    return { type: CouponsStartActionType.CouponStartAdded, payload: coupon };\n};\nexport function couponStartUpdatedAction(coupon: CouponModel): CouponStartAction {\n    return { type: CouponsStartActionType.CouponStartUpdated, payload: coupon };\n};\nexport function couponStartDeletedAction(id:number): CouponStartAction {\n    return { type: CouponsStartActionType.CouponStartDeleted, payload: id };\n};\n\nexport function couponsStartReducer(currentState: CouponsStartAppState = new CouponsStartAppState(),action:CouponStartAction): CouponsStartAppState{\n    \n    const newState = {...currentState};\n    \n    switch (action.type) {\n        case CouponsStartActionType.CouponsStartDownloaded:\n            newState.coupons = action.payload;\n            break;\n        case CouponsStartActionType.CouponStartAdded:\n            newState.coupons.push(action.payload);\n            break;\n        case CouponsStartActionType.CouponStartUpdated:\n            newState.coupons.push(action.payload);\n            break;\n        case CouponsStartActionType.CouponStartDeleted:\n            newState.coupons = newState.coupons.filter(c=>c.id !== action.payload);\n            break;\n        \n    };\n\n    return newState;\n};","import CouponModel from \"../models/CouponModel\";\nimport CouponPayLoadModel from \"../models/CouponPayLoadModel\";\n\nexport class CouponsAppState {\n    public coupons: CouponModel[] = [];\n};\n\nexport enum CouponsActionType {\n    CouponsDownloaded= \"CouponsDownloaded\",\n    CouponAdded = \"CouponAdded\",\n    CouponUpdated = \"CouponUpdated\",\n    CouponDeleted = \"CouponDeleted\",\n    CouponsCleared = \"CouponsCleared\"\n};\n\nexport interface CouponAction {\n    type: CouponsActionType;\n    payload?: any;\n};\n\nexport function couponsDownloadedAction(coupons: CouponModel[]): CouponAction {\n    return { type: CouponsActionType.CouponsDownloaded, payload: coupons };\n};\nexport function couponAddedAction(coupon: CouponPayLoadModel): CouponAction {\n    return { type: CouponsActionType.CouponAdded, payload: coupon};\n};\nexport function couponAddedAction2(coupon: CouponModel): CouponAction {\n    return { type: CouponsActionType.CouponAdded, payload: coupon};\n};\nexport function couponUpdatedAction(coupon: CouponModel): CouponAction {\n    return { type: CouponsActionType.CouponUpdated, payload: coupon };\n};\nexport function couponUpdatedAction2(coupon: CouponPayLoadModel): CouponAction {\n    return { type: CouponsActionType.CouponUpdated, payload: coupon };\n};\nexport function couponsDeletedAction(id:number): CouponAction {\n    return { type: CouponsActionType.CouponDeleted, payload: id };\n};\nexport function couponsClearedAction(): CouponAction {\n    return { type: CouponsActionType.CouponsCleared};\n};\n\nexport function couponsReducer(currentState: CouponsAppState = new CouponsAppState(),action:CouponAction): CouponsAppState{\n    \n    const newState = {...currentState};\n\n    switch (action.type) {\n        case CouponsActionType.CouponsDownloaded:\n            newState.coupons = action.payload;\n            break;\n        case CouponsActionType.CouponAdded:\n            newState.coupons.push(action.payload);\n            break;\n\n        case CouponsActionType.CouponUpdated:\n            const idx = newState.coupons.findIndex(c => c.id === action.payload.id);\n            newState.coupons[idx] = action.payload;\n            break;\n\n        case CouponsActionType.CouponDeleted:\n            newState.coupons = newState.coupons.filter(c=>c.id !== action.payload);\n            break;\n\n        case CouponsActionType.CouponsCleared:\n            newState.coupons = newState.coupons=[];\n            break;\n    };\n\n    return newState;\n};","import CustomerModel from \"../models/CustomerModel\";\n\nexport class CustomersAppState {\n    public customers: CustomerModel[] = [];\n};\n\nexport enum CustomerActionType {\n    CustomersDownloaded= \"CustomersDownloaded\",\n    CustomerAdded = \"CustomerAdded\",\n    CustomerUpdated = \"CustomerUpdated\",\n    CustomerDeleted = \"CustomerDeleted\"\n};\n\nexport interface CustomerAction {\n    type: CustomerActionType;\n    payload?: any;\n};\n\nexport function customersDownloadedAction(customers: CustomerModel[]): CustomerAction {\n    return { type: CustomerActionType.CustomersDownloaded, payload: customers };\n};\nexport function customerAddedAction(customer: CustomerModel): CustomerAction {\n    return { type: CustomerActionType.CustomerAdded, payload: customer };\n};\nexport function customerUpdatedAction(customer: CustomerModel): CustomerAction {\n    return { type: CustomerActionType.CustomerUpdated, payload: customer };\n};\nexport function customerDeletedAction(id:number): CustomerAction {\n    return { type: CustomerActionType.CustomerDeleted, payload: id };\n};\n\nexport function customersReducer(currentState: CustomersAppState = new CustomersAppState(),action:CustomerAction): CustomersAppState{\n    \n    const newState = {...currentState};\n    \n    switch (action.type) {\n        case CustomerActionType.CustomersDownloaded:\n            newState.customers = action.payload;\n            break;\n        case CustomerActionType.CustomerAdded:\n            newState.customers.push(action.payload);\n            break;\n        case CustomerActionType.CustomerUpdated:\n            const idx = newState.customers.findIndex(c => c.id === action.payload.id);\n            newState.customers[idx] = action.payload;\n            break;\n        case CustomerActionType.CustomerDeleted:\n            newState.customers = newState.customers.filter(c=>c.id !== action.payload);\n            break;   \n    };\n\n    return newState;\n};","import { combineReducers, createStore } from \"redux\";\nimport { authReducer } from \"./AuthState\";\nimport { companiesReducer } from \"./CompaniesState\";\nimport { couponsStartReducer } from \"./CouponsStartState\";\nimport { couponsReducer } from \"./CouponsState\";\nimport { customersReducer } from \"./CustomersState\";\n\n\nconst reducers = combineReducers({ couponsState: couponsReducer,\n    customersState:customersReducer,\n    companiesState:companiesReducer,\n    authLoginState:authReducer,\n    couponsStartState:couponsStartReducer,\n });\nconst store = createStore(reducers);\n\n\nexport default store;","class Globals{\n};\n\nclass DevelopmentGlobals extends Globals{\n    public urls = {\n        coupons:\"http://localhost:8080/coupon/\",\n        client: \"http://localhost:8080/client/\",\n        company: \"http://localhost:8080/company/\",\n        customer:\"http://localhost:8080/customer/\",\n        admin: \"http://localhost:8080/admin/\"\n    };\n};\n\nclass ProductionGlobals extends Globals{\n    public urls = {\n        coupons:\"/coupon/\",\n        client: \"/client/\",\n        company: \"/company/\",\n        customer:\"/customer/\",\n        admin: \"/admin/\",\n    };\n};\n\nconst globals = process.env.NODE_ENV === 'production' ? new ProductionGlobals() : new DevelopmentGlobals();\n\nexport default globals;","import axios from 'axios';\nimport store from '../Redux/Store';\n\nconst tokenAxios = axios.create();\n\ntokenAxios.interceptors.request.use(request => {\n    request.headers = {\n        \"authorization\": store.getState().authLoginState.client?.token\n    };\n\n    return request;\n});\n\nexport default tokenAxios;","import { Notyf } from \"notyf\";\n\nexport enum SccMsg {\n  PURCHASED_COUPON = \"PURCHASED COUPON\",\n \n  ADDED_COMPANY = 'COMPANY ADDED',\n  ADDED_CUSTOMER = 'CUSTOMER ADDED',\n  ADDED_COUPON = \"COUPON ADDED\",\n \n  DOWNLOADED_COMPANIES = 'ALL COMPANIES FETCHED',\n  DOWNLOADED_CUSTOMERS = 'ALL CUSTOMERS FETCHED',\n  DOWNLOADED_COUPONS = 'ALL COUPONS FETCHED',\n  \n  LOGIN_SUCCESS = \"LOGIN SUCCESSFUL\",\n  LOGOUT_SUCCESS = \"LOGOUT SUCCESSFUL\",\n  \n  UPDATED_SUCCESS = \"UPDATED SUCCESSFULLY\",\n  DELETED_SUCCESS = \"DELETED SUCCESSFULLY\",\n  REGISTER_SUCCESS = \"REGISTERED SUCCESSFULLY\",\n  \n  COMPANY_LOADED = \"COMPANY LOADED\",\n  CUSTOMER_LOADED = \"CUSTOMER LOADED\",\n  COUPON_LOADED = \"COUPON LOADED\"\n};\n\nexport enum ErrMsg {\n  PLS_LOGIN = \"PLEASE LOGIN\",\n  NO_COUPONS = \"NO COUPONS FOUND\",\n  NO_CUSTOMERS = \"NO CUSTOMERS FOUND\",\n  NO_COMPANIES = \"NO COMPANIES FOUND\",\n  COUPON_NOT_FOUND = \"COUPON NOT FOUND\",\n  COMPANY_NOT_FOUND = \"COMPANY NOT FOUND\"\n};\n\nclass Notify{\n\n    private notification = new Notyf({duration:4000, position:{x:\"left\",y:\"top\"}});\n \n    static error: any;\n   \n    public success(message: string){\n        this.notification.success(message);\n    };\n\n    public error(err: any){\n        const msg = this.extractMsg(err);\n        this.notification.error(msg);\n    };\n\n    private extractMsg(err: any): string{\n        \n\t\tif(typeof err === 'string'){\n            return err;\n        };\n\n        if(typeof err?.response?.data === 'string'){ \n            return err.response.data;\n        };\n\n        if(Array.isArray(err?.response?.data)){ \n            return err?.response?.data[0];\n        };\n    \n        if(typeof err?.message === 'string'){\n            return err.message;\n        };\n\n        return \"Damn, an error occurred, please try again.\";\n    };\n};\nconst notify = new Notify();\n\nexport default notify;","enum CategoryType{\n    food = \"FOOD\",\n    electronics = \"ELECTRONICS\",\n    restaurant=\"RESTAURANT\", \n    vacation =\"VACATION\", \n    lifeStyle = \"LIFE_STYLE\"\n};\nexport default CategoryType;","import { useEffect, useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { NavLink, RouteComponentProps, useHistory } from \"react-router-dom\";\nimport Button from \"reactstrap/lib/Button\";\nimport ClientType from \"../../../../models/ClientTypeModel\";\nimport CompanyModel from \"../../../../models/CompanyModel\";\nimport { companyDeletedAction, companyUpdatedAction} from \"../../../../Redux/CompaniesState\";\nimport store from \"../../../../Redux/Store\";\nimport globals from \"../../../../Services/Globals\";\nimport tokenAxios from \"../../../../Services/InterceptorAxios\";\nimport notify, { ErrMsg, SccMsg } from \"../../../../Services/Notification\";\nimport \"./AdminCompanyDetails.css\";\n\ninterface RouteParam {\n    id: string;\n};\n\ninterface CompanyDetailsProps extends RouteComponentProps<RouteParam> { };\n\nconst AdminCompanyDetails=(props:CompanyDetailsProps): JSX.Element=>{\n \n  const id = +props.match.params.id;\n  const [company,setCompany] = useState(store.getState().companiesState.companies.find((c) => c.id === id));\n  const {register,handleSubmit,formState:{errors ,isDirty, isValid}} = useForm<CompanyModel>({\n    mode: \"onTouched\"\n        });\n  const history = useHistory();\n  const[companies,setCompanies] = useState(store.getState().companiesState.companies);\n  const [disabled,setDisabled] = useState(true);\n  const [name,setName] = useState(company?.name);\n  const [email,setEmail] = useState(company?.email);\n  const [password,setPassword] = useState(company?.password);\n\n  const updateCompany = async (company:CompanyModel) => {\n    try {\n      company.id = id; \n      const response =await tokenAxios.put<CompanyModel>(globals.urls.admin+\"company\",company);\n      store.dispatch(companyUpdatedAction( response.data));\n      setCompany( response.data);\n      notify.success(SccMsg.UPDATED_SUCCESS);\n      history.push('/admin/companies'); \n      }catch (err) {\n      notify.error(err.message);\n      };\n  };\n\n  const fetchCompany = async() =>{\n    setCompany(company);  \n    return company;\n  };\n\n  useEffect(() => {\n    if (store.getState().authLoginState.client?.clientType!==ClientType.admin) {\n      notify.error(ErrMsg.PLS_LOGIN);\n      history.push(\"/login\");\n    };\n    \n    try { \n      fetchCompany();\n    }catch (err) {\n      notify.error(err.message);\n    };\n    const unsubscribe = store.subscribe(()=>{\n      setCompanies(store.getState().companiesState.companies);   \n    });\n    return unsubscribe;\n  });\n\n  const deleteCompany = async () => {\n    const res = window.confirm(\n      \"Are you sure you want to delete id=\" + id + \"?\"\n    );\n    if (res) {\n      try {\n        await tokenAxios.delete<CompanyModel>(globals.urls.admin+\"company/\"+id);\n        store.dispatch(companyDeletedAction(id));\n        notify.success(SccMsg.DELETED_SUCCESS);\n        history.push('/admin/companies');\n      }catch (err) {\n       notify.error(err.message);\n      };\n    };\n  };\n   \n  const handleName = (e: { target: { value: string; }; }) =>{\n      setName(e.target.value);\n    return name; \n  };\n  const handleEmail = (e: { target: { value: string; }; }) =>{\n      setEmail(e.target.value);\n      return email; \n  };\n  const handlePassword = (e: { target: { value: string; }; }) =>{\n      setPassword(e.target.value);\n    return password; \n  };\n\n\nreturn(\n  <div className=\"AdminCompanyDetails cardD \">\n    {company && (\n      <>\n          <h2 id=\"niceTitle\">Details</h2>\n       <form onSubmit={handleSubmit(updateCompany)} >\n          <Button  type=\"button\" onClick={()=>setDisabled(false)} >✏️</Button> <br />\n\n              <label>ID</label>\n                <input type=\"text\" disabled className=\"form-control\"  name=\"id\" defaultValue ={company?.id}\n                {...register(\"id\",{required:true})}/>  <br />\n                \n              <label>Name</label> \n                <input className=\"form-control\" type=\"text\" disabled={disabled}  name=\"name\" defaultValue ={company?.name}\n                    onChange={()=>handleName}{...register(\"name\",{\n                      required:true,\n                      minLength:2,\n                })}/>\n             \n                {errors.name?.type==='required' && <span id=\"errors\">Missing name</span>}\n                {errors.name?.type==='minLength' && <span id=\"errors\">Name is too short</span>}\n\n              <br />\n\n              <label >Email</label>\n                <input className=\"form-control\" type=\"email\"  disabled={disabled} name=\"email\" defaultValue={company?.email} \n                    onChange={()=>handleEmail}{...register(\"email\",{\n                      required:true,\n                      minLength:9,\n                })}/>\n          \n                {errors.email?.type==='required' && <span id=\"errors\">Missing email</span>}\n                {errors.email?.type==='minLength' && <span id=\"errors\" >Email is too short</span>}\n                \n                <br />\n\n              <label >Password</label>\n                <input  className=\"form-control\" type=\"password\" disabled={disabled} name=\"password\" defaultValue={company?.password} \n                    onChange={()=>handlePassword}{...register(\"password\",{\n                      required:true,\n                      minLength:4,\n              })}/>\n         \n                {errors.password?.type==='required' && <span id=\"errors\">Missing password</span>}\n                {errors.password?.type==='minLength' && <span id=\"errors\">  Password is too short</span>}\n                <br />\n\n             <Button  type=\"submit\"  size=\"lg\" disabled={!isDirty || !isValid}>✔️</Button>\n             <Button onClick={() => deleteCompany()}  size=\"lg\"> 🗑️</Button>\n            \n        </form>\n             <Button><NavLink to=\"/admin/companies\"><i className=\"tim-icons icon-double-left\"></i></NavLink></Button>\n      </>\n    )}\n  </div>\n );\n};\n\nexport default AdminCompanyDetails;\n\n\n\n","import {  useEffect, useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { NavLink, RouteComponentProps, useHistory } from \"react-router-dom\";\nimport { Button } from \"reactstrap\";\nimport Input from \"reactstrap/lib/Input\";\nimport CategoryType from \"../../../models/CategoryTypeModel\";\nimport ClientType from \"../../../models/ClientTypeModel\";\nimport CouponModel from \"../../../models/CouponModel\";\nimport CouponPayLoadModel from \"../../../models/CouponPayLoadModel\";\nimport { couponsDeletedAction, couponUpdatedAction } from \"../../../Redux/CouponsState\";\nimport store from \"../../../Redux/Store\";\nimport globals from \"../../../Services/Globals\";\nimport tokenAxios from \"../../../Services/InterceptorAxios\";\nimport notify, { ErrMsg, SccMsg } from \"../../../Services/Notification\";\nimport \"./CompanyCouponDetails.css\";\n\ninterface RouteParam {\n  id: string;\n};\ninterface CouponDetailsProps extends RouteComponentProps<RouteParam> { };\n\nconst CompanyCouponDetails = (props: CouponDetailsProps) => {\n\n  const id = +props.match.params.id;\n  const {register,handleSubmit,formState:{errors}} = useForm< CouponPayLoadModel>({\n    mode: \"onTouched\"\n        });\n  const [coupon, setCoupon] = useState(store.getState().couponsState.coupons.find((c) => c.id === id));\n  const[coupons,setCoupons] = useState(store.getState().couponsState.coupons);\n  const[client,setClient] = useState(store.getState().authLoginState.client);\n  const history = useHistory();\n  const [disabled,setDisabled] = useState(true);\n  const[amount,setAmount] = useState(coupon?.amount);\n  const[category,setCategory] = useState(coupon?.categoryType);\n  const[description,setDescription] = useState(coupon?.description);\n  const[startDate,setStartDate] = useState(coupon?.startDate);\n  const[endDate,setEndDate] = useState(coupon?.endDate);\n  const[price,setPrice] = useState(coupon?.price);\n  const[title,setTitle] = useState(coupon?.title);\n \n  const fetchCoupon = async () => {\n    setCoupon(coupon);\n    return coupon;\n  };\n\n  const updateCoupon = async (coupon: CouponModel) => {\n    try {\n        coupon.id = id;\n        coupon.companyId = client?.clientId\n        const response = await tokenAxios.put<CouponModel>(globals.urls.company+\"coupon\",coupon);\n        store.dispatch(couponUpdatedAction(response.data));\n        setCoupon(response.data);\n        notify.success(SccMsg.UPDATED_SUCCESS);\n        history.push(\"/company/coupons\");\n    } catch (err) {\n      notify.error(err.message);\n    };\n  };\n\n  const deleteCoupon = async () => {\n    const res = window.confirm(\n      \"Are you sure you want to delete id=\" + id + \"?\"\n    );\n    if (res) {\n      try {\n        await tokenAxios.delete<CouponModel>(globals.urls.company+\"coupon/\"+id);\n        store.dispatch(couponsDeletedAction(id));\n        notify.success(SccMsg.DELETED_SUCCESS);\n        history.push('/company/coupons');\n      } catch (err) {\n       notify.error(err.message);\n      };\n    };\n  };\n\n  useEffect(() => {\n    if (store.getState().authLoginState.client?.clientType!==ClientType.company) {\n      notify.error(ErrMsg.PLS_LOGIN);\n      history.push(\"/login\");\n    };\n    try { \n      fetchCoupon();\n    }catch (err) {\n      notify.error(err);\n    };\n    const unsubscribe = store.subscribe(()=>{\n      setCoupons(store.getState().couponsState.coupons);\n    });\n    return unsubscribe;\n  });\n  \n\n  const handleDescription =  (e: { target: { value: string; }; }) =>{\n    setDescription(e.target.value);\n    return description; \n  };\n  const handleAmount =  (e: { target: { value: number; }; }) =>{\n    setAmount(e.target.value);\n    return amount; \n  };\n  const handleCategory =  (e: { target: { value: CategoryType; }; }) =>{\n    setCategory(e.target.value);\n    return category; \n  };\n  const handleEndDate=  (e: { target: { value: string; }; }) =>{\n    setEndDate(e.target.value);\n    return endDate; \n  };\n  const handleStartDate =  (e: { target: { value: string; }; }) =>{\n    setStartDate(e.target.value);\n    return startDate; \n  };\n  const handlePrice =  (e: { target: { value: number; }; }) =>{\n    setPrice(e.target.value);\n    return price; \n  };\n  const handleTitle =  (e: { target: { value: string; }; }) =>{\n    setTitle(e.target.value);\n    return title; \n  };\n\nreturn (\n    <div className=\"CompanyCouponDetails cardD\">\n     \n      {coupon && (\n        <>\n              <h1 id=\"niceTitle\">Details</h1>\n         <form onSubmit={handleSubmit(updateCoupon)}>\n         <Button  type=\"button\" onClick={()=>setDisabled(false)} >✏️</Button>\n         <br /><br />\n\n              <label>ID</label>\n                <input className=\"form-control\" type=\"number\" disabled  name=\"id\" defaultValue ={coupon?.id}\n                    {...register(\"id\",{required:true})}/> <br /> \n\n                {<img src={ globals.urls.company+'images/'+coupon?.id}alt={coupon.title}/>}\n                <br/>\n                <br />\n\n                <label>CompanyId</label> \n                    <input className=\"form-control\" disabled type=\"number\" name=\"companyId\" \n                    value={client?.clientId}\n                        {...register(\"companyId\")}/>\n                        <br />\n\n                <label>Amount</label> \n                    <input className=\"form-control\" disabled={disabled}   onChange={()=>handleAmount}\n                      type=\"number\" name=\"amount\" step=\"1\" defaultValue={coupon?.amount}\n                        {...register(\"amount\",{\n                            required: {\n                            value:true,\n                            message:'Missing Amount'\n                        },\n                            min:{\n                            value:0,\n                            message:'Amount must be greater than zero'\n                        }\n                    })}/>\n                <br />\n                <span id=\"errors\">{errors.amount?.message}</span>\n                <br />\n\n                <label>Category</label>\n                <Input type=\"select\" className=\"form-control\" onChange={()=>handleCategory}\n                 disabled={disabled} defaultValue={coupon?.categoryType}{...register(\"categoryType\",{\n                        required:{\n                        value:false,\n                        message:'you must choose a category'\n                        }\n                })}>\n                        <option defaultValue=\"\"  hidden>Choose here</option>\n                        <option id=\"dark1\" value={CategoryType.food}>FOOD</option>\n                        <option id=\"dark1\" value={CategoryType.electronics}>ELECTRONICS</option>\n                        <option id=\"dark1\" value={CategoryType.restaurant}>RESTAURANT</option>\n                        <option id=\"dark1\" value={CategoryType.vacation}>VACATION</option>\n                        <option id=\"dark1\" value={CategoryType.lifeStyle}>LIFE STYLE</option>\n                </Input>\n                <br />\n                <span id=\"errors\">{errors.categoryType?.message}</span>\n                \n                <br />\n                <label >Description</label>\n                <input className=\"form-control\" onChange={()=>handleDescription} type=\"text\" name=\"description\"\n                 disabled={disabled} defaultValue={coupon?.description}\n                    {...register(\"description\",{\n                        required:true,\n                        minLength:10,\n                    })}/>\n                <br />\n                {errors.description?.type==='required' && <span  id=\"errors\">Missing description</span>}\n                {errors.description?.type==='minLength' && <span  id=\"errors\">Description is too short</span>}\n                <br />\n\n                <label>Start-Date</label>\n                <input className=\"form-control\" onChange={()=>handleStartDate} type=\"date\" name=\"startDate\"\n                 disabled={disabled} defaultValue={coupon?.startDate}{...register(\"startDate\",{\n                        required:{\n                        value:true,\n                        message:'you must choose a starting date'\n                        }\n                })}/>\n                <br />\n                <span  id=\"errors\">{errors.startDate?.message}</span>\n                <br />\n                \n                <label>End-Date</label>\n                <input className=\"form-control\" onChange={()=>handleEndDate} type=\"date\"\n                  disabled={disabled} name=\"endDate\"  defaultValue={coupon?.endDate} {...register(\"endDate\",{\n                        required:{\n                        value:true,\n                        message:'you must choose an expiration date'\n                        }\n                })}/>\n                <br />\n                <span  id=\"errors\">{errors.endDate?.message}</span>\n                <br />\n\n                <label>Price</label>\n                <input className=\"form-control\" onChange={()=>handlePrice} type=\"number\" name=\"price\" step=\"0.1\"\n                 disabled={disabled}  defaultValue={coupon?.price}\n                {...register(\"price\",\n                    {\n                        required: {\n                            value:true,\n                            message:'Missing price'},\n                        min:{\n                            value:0,\n                            message:'Price must be greater than zero'}\n                    }\n                )}/>\n                <br />\n                <span  id=\"errors\">{errors.price?.message}</span>\n                <br/>\n\n                <label>Title</label>\n                <input className=\"form-control\" onChange={()=>handleTitle} type=\"text\" name=\"title\"\n                 disabled={disabled}  defaultValue={coupon?.title}\n                    {...register(\"title\",{\n                        required:true,\n                        minLength:2,\n                    })}/>\n                     <br />\n                {errors.title?.type==='required' && <span  id=\"errors\">Missing title</span>}\n                {errors.title?.type==='minLength' && <span  id=\"errors\">Title is too short</span>}\n\n                <br /><br />\n               \n                <Button  type=\"submit\"  size=\"lg\" disabled={disabled}>✔️</Button>\n                <Button onClick={() => deleteCoupon()}  size=\"lg\"> 🗑️</Button>\n            \n               \n            </form>\n            <Button><NavLink to=\"/company/coupons\"><i className=\"tim-icons icon-double-left\"></i></NavLink></Button>\n\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default CompanyCouponDetails;\n\n\n","import React from \"react\";\nimport \"./Login.css\";\nimport { useForm } from \"react-hook-form\";\nimport CredentialsModel from \"../../../models/CredentialsModel\";\nimport {  NavLink, useHistory } from \"react-router-dom\";\nimport globals from \"../../../Services/Globals\";\nimport store from \"../../../Redux/Store\";\nimport { loginAction } from \"../../../Redux/AuthState\";\nimport ClientModel from \"../../../models/ClientModel\";\nimport ClientTypeModel from \"../../../models/ClientTypeModel\";\nimport tokenAxios from \"../../../Services/InterceptorAxios\";\nimport ClientType from \"../../../models/ClientTypeModel\";\nimport notify, { SccMsg } from \"../../../Services/Notification\";\nimport classnames from \"classnames\";\nimport \"../../../assets/css/nucleo-icons.css\";\nimport {\n    Button,\n    Card,\n    CardHeader,\n    CardBody,\n    CardFooter,\n    CardImg,\n    CardTitle,\n    Label,\n    FormGroup,\n    Form,\n    Input,\n    InputGroupAddon,\n    InputGroupText,\n    InputGroup,\n    Container,\n    Row,\n    Col,\n  } from \"reactstrap\";\n\n\nfunction Login(): JSX.Element {\n\n    const [emailFocus, setEmailFocus] = React.useState(false);\n    const [passwordFocus, setPasswordFocus] = React.useState(false);\n    const {register,handleSubmit, formState: { errors, isDirty, isValid\t }} = useForm<CredentialsModel>({ mode: \"onTouched\" });\n    const history = useHistory();\n\n     \n    async function send(credentials: CredentialsModel) {\n        try{ \n            const response = await tokenAxios.post<ClientModel>(globals.urls.client+\"login\",credentials);\n            store.dispatch(loginAction(response.data));\n            notify.success(SccMsg.LOGIN_SUCCESS);\n          if(response.data.clientType===ClientType.company){\n              history.push('/company'); \n          };\n          if(response.data.clientType===ClientType.customer){\n              history.push('/customer'); \n          };\n          if(response.data.clientType===ClientType.admin){\n              history.push('/admin');\n          };\n        }\n        catch(err){\n             notify.error(err.message);\n        };\n    };\n\nreturn (\n       \n   <div className=\"Login section section-signup\">\n      <Container>\n        <div className=\"squares square-1\" />\n        <div className=\"squares square-2\" />\n        <div className=\"squares square-3\" />\n        <div className=\"squares square-4\" />\n        <Row className=\"row-grid justify-content-between align-items-center\">\n         \n          <Col className=\"mb-lg-auto\" lg=\"6\">\n            <Card className=\"card-register\">\n              <CardHeader>\n                <CardImg\n                  alt=\"...\"\n                  src={require(\"../../../assets/img/square-purple-1.png\").default}\n                />\n                <CardTitle  tag=\"h4\">{' '}Login</CardTitle>\n              </CardHeader>\n              <CardBody>\n                <Form className=\"form\" onSubmit={handleSubmit(send)}>\n                  <InputGroup\n                    className={classnames({\n                      \"input-group-focus\": emailFocus,\n                    })}\n                  >\n                    <InputGroupAddon addonType=\"prepend\" >\n                      <InputGroupText>\n                      <i className=\"tim-icons icon-email-85\" />\n                      </InputGroupText>\n                    </InputGroupAddon>\n            \n                    <Input\n                    name=\"email\"\n                      placeholder=\"Email\"\n                      type=\"email\"\n                      onFocus={(e) => setEmailFocus(true)}\n                      onBlur={(e) => setEmailFocus(false)}\n                      {...register(\"email\",{\n                        required:true,\n                        minLength:9,\n                    })}\n                    />\n                {errors.email?.type==='required' && <span id=\"errors\">Missing email</span>}\n                {errors.email?.type==='minLength' && <span id=\"errors\">Email is too short</span>}\n               \n                  </InputGroup>\n                  <InputGroup\n                    className={classnames({\n                      \"input-group-focus\": emailFocus,\n                    })}\n                  >\n                    <InputGroupAddon addonType=\"prepend\">\n                      <InputGroupText>\n                      <i className=\"tim-icons icon-lock-circle\" />\n                      </InputGroupText>\n                    </InputGroupAddon>\n                    <Input\n                      name=\"password\"\n                      placeholder=\"Password\"\n                      type=\"password\"\n                      onFocus={(e) => setPasswordFocus(true)}\n                      onBlur={(e) => setPasswordFocus(false)}\n                      {...register(\"password\",{\n                        required:true,\n                        minLength:4,\n                    })}\n                    />\n                     <br />\n                {errors.password?.type==='required' && <span id=\"errors\">Missing password</span>}\n                {errors.password?.type==='minLength' && <span id=\"errors\">Password is too short</span>}\n                <br />\n\n                  </InputGroup>\n                  <InputGroup\n                    className={classnames({\n                      \"input-group-focus\": passwordFocus,\n                    })}\n                  >\n                    <InputGroupAddon addonType=\"prepend\">\n                      <InputGroupText>\n                       \n                      </InputGroupText>\n                    </InputGroupAddon>\n\n                    <Input\n                     name=\"clientType\"\n                     placeholder=\"clientType\"\n                     type=\"select\"\n                     id=\"exampleSelect1\"\n                    {...register(\"clientType\",{\n                        required:{\n                        value:true,\n                        message:'you must choose a clientType'\n                        }\n                })}>\n                        \n                        <option value=\"\"  disabled hidden>Choose here</option>\n                        <option id=\"dark1\" value={ClientTypeModel.admin}>ADMIN</option>\n                        <option id=\"dark1\" value={ClientTypeModel.company}>COMPANY</option>\n                        <option id=\"dark1\" value={ClientTypeModel.customer}>CUSTOMER</option>\n                       \n                        \n                </Input>\n                <br />\n                <span id=\"errors\">{errors.clientType?.message}</span>\n                \n                <br />\n\n                  </InputGroup> \n                  <FormGroup check className=\"text-left\">\n                    <Label check>\n                      <Input type=\"checkbox\" required />\n                      <span className=\"form-check-sign\" />I agree to the{\" \"}\n                      <NavLink to=\"/terms\" exact>\n                        terms and conditions\n                      </NavLink>\n                      .\n                    </Label>\n                  </FormGroup>\n                  <CardFooter>\n                 \n                <Button type=\"submit\" className=\"btn-round\" color=\"primary\" size=\"lg\" disabled={!isDirty || !isValid}>✔️</Button>\n                <Button className=\"btn-round\" color=\"primary\" size=\"lg\" onClick={() =>{history.push(\"/home\")}}>✖️</Button>\n                \n              </CardFooter>\n                </Form>\n              </CardBody>\n             \n            </Card>\n          </Col>\n        </Row>\n      </Container>           \n    </div>\n  );\n};\n\nexport default Login;\n\n","import { useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { logoutAction } from \"../../../Redux/AuthState\";\nimport { couponsClearedAction } from \"../../../Redux/CouponsState\";\nimport store from \"../../../Redux/Store\";\nimport globals from \"../../../Services/Globals\";\nimport tokenAxios from \"../../../Services/InterceptorAxios\";\nimport notify, { SccMsg } from \"../../../Services/Notification\";\n\nfunction Logout(): JSX.Element {\n  const history = useHistory();\n\n  const logOut = async()=>{\n    await tokenAxios.delete(globals.urls.client+\"logout\");\n    store.dispatch(logoutAction());\n    history.push(\"/home\");\n    notify.success(SccMsg.LOGOUT_SUCCESS);\n  }\n\n   useEffect(()=>{\n      store.dispatch(couponsClearedAction());\n      try{\n        logOut();\n      }\n      catch (err) {\n       notify.error(err.message);\n      }\n    });\n    \nreturn (\n  <></>\n );\n};\n\nexport default Logout;\n","import \"./Page404.css\";\n\nfunction Page404(): JSX.Element {\n    return (\n        <div className=\"Page404\">\n            <h1 id=\"niceTitle2\">Page not found </h1>\n\t\t\t<iframe title =\"PageNotFound\" src=\"https://giphy.com/embed/6zvDSUtuMqp3O\" width=\"480\" height=\"480\" frameBorder=\"0\" className=\"giphy-embed\" allowFullScreen></iframe><p></p>\n        </div>\n    );\n}\n\nexport default Page404;\n","\nimport { useEffect, useState } from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport Button from \"reactstrap/lib/Button\";\nimport store from \"../../../Redux/Store\";\nimport \"./Home.css\";\n\nfunction Home(): JSX.Element {\n\n    const [client,setClient]=useState(store.getState().authLoginState.client);\n    const [count, setCount] =useState(null);\n\n    useEffect(() =>{   \n        const unsubscribe = store.subscribe(() => {\n          setCount(store.getState().couponsStartState.coupons);\n         \n        });\n        return unsubscribe;\n    });\n\n    return (\n        <div className=\"Home\">\n\n            <div >\n                <img className=\"imgHome\" src=\"https://c.tenor.com/8McIGu0Tf_QAAAAj/fire-joypixels.gif\" alt=\"\" /> \n                    <br/>\n                    <br/>\n\n                <h3>  In Click 'N' Save you'll find the hottest discounts</h3>\n\n            {!client&&\n                <>\n                    <span id =\"white\">\n                        For more info and purchase Sign up or Login\n                    </span> <br /> <br />\n                </>\n            }\n                </div>\n                    {!client&&\n                    <>\n                    <NavLink  id=\"grey\" to=\"/signup\"><Button color=\"primary\" size=\"small\">SignUp</Button></NavLink>\n                   <NavLink id=\"grey\" to=\"/login\"> <Button color=\"primary\" size=\"small\"><span>SignIn</span></Button> </NavLink><br />   \n                    </>\n                    }\n                    <br />\n\n                    <span id =\"\">Follow the link bellow to se all coupons <br/></span> <br />\n                    <NavLink to=\"/coupons\" exact><Button>See All</Button></NavLink><br /><br />\n                \n                <div>\n\n\n            </div>\n        </div>\n    );\n};\n\nexport default Home;\n","import \"./EmptyView.css\";\n\ninterface EmptyViewProps {\n\tmsg: string;\n};\n\nconst EmptyView=(props: EmptyViewProps): JSX.Element=> {\n    return (\n        <div className=\"EmptyView\">\n            <h2 id=\"niceTitle2\">{props.msg}</h2>\n\t\t\t<img alt =\"empty view\"src=\"https://media.giphy.com/media/xUySTWxyhBQCk41ZAs/giphy.gif\"/>\n        </div>\n    );\n};\n\nexport default EmptyView;","import axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { Input } from \"reactstrap\";\nimport CouponModel from \"../../../models/CouponModel\";\nimport { couponsStartDownloadedAction } from \"../../../Redux/CouponsStartState\";\nimport store from \"../../../Redux/Store\";\nimport globals from \"../../../Services/Globals\";\nimport notify, { ErrMsg, SccMsg } from \"../../../Services/Notification\";\nimport EmptyView from \"../../SharedArea/EmptyView/EmptyView\";\nimport \"./CouponCards.css\";\n\nconst CouponCards = ():JSX.Element=>{\n  const [search,setSearch] = useState('');\n  const[filteredCoupons,setFilteredCoupons] = useState([]);\n  const[coupons,setCoupons] = useState(store.getState().couponsStartState.coupons);\n  const[count,setCount] = useState(store.getState().couponsState.coupons.length);\n\n  const fetchCoupons = async () => {\n      if (store.getState().couponsStartState.coupons.length === 0) {\n          const response = await axios.get<CouponModel[]>(globals.urls.coupons+\"coupons\");\n          store.dispatch(couponsStartDownloadedAction(response.data));\n      if(response.data.length!==0){\n          setCoupons(response.data);\n          notify.success(SccMsg.DOWNLOADED_COUPONS);\n          return response.data;\n        }\n      else{\n          notify.error(ErrMsg.NO_COUPONS);\n        return 0; \n          };\n        };\n      };\n      \n  useEffect(() => {\n      try{\n        fetchCoupons();\n      }\n      catch(err){\n        notify.error(err.message);\n      };\n    const unsubscribe = store.subscribe(() => {\n      setCount(store.getState().couponsStartState.coupons.length);\n    });\n    return unsubscribe;\n  });\n        \n  useEffect(() => {\n    setFilteredCoupons( coupons.filter((c)=>{\n    return c.title.toLowerCase().includes(search.toLowerCase())}));\n  },[search,coupons]);\n\nreturn(\n    <div className=\"CouponCards\">\n      \n      <h1 id=\"niceTitle\"> Coupons</h1>\n        {store.getState().couponsStartState.coupons.length===0&&<EmptyView msg=\"Loading coupons!\"/>}\n        <br />\n        \n          <div className=\"shortWidth\">\n                  <Input\n                    type=\"text\"\n                    placeholder='Search...'\n                    spellCheck={false}\n                    onChange={(e)=>setSearch(e.target.value)}\n                  />\n          </div>\n\n          {store.getState().couponsStartState.coupons.length!==0&&\n            (\n            <ul>\n            {filteredCoupons.map((coupon)=>\n            \n              <li key={coupon?.id}>\n              <NavLink to={\"/coupons/details/\" + coupon?.id}>\n                <div className=\"details\">\n                    <h2> {coupon.title}</h2>\n                    <p> {coupon.price}$</p>\n                    <p> {coupon.price}$</p>\n                  <img src={ globals.urls.company+'images/'+coupon?.id}alt={coupon.title}/>\n                  <img src={globals.urls.company+'images/'+coupon?.id}alt={coupon.title}/>\n                </div>\n              </NavLink>\n          \n              </li>\n            )}\n            </ul>\n          )}\n      </div>\n    );\n};\n\nexport default CouponCards;\n\n\n","import { useEffect, useState } from \"react\";\nimport { NavLink, RouteComponentProps, useHistory } from \"react-router-dom\";\nimport { Button } from \"reactstrap\";\nimport ClientType from \"../../../models/ClientTypeModel\";\nimport CouponModel from \"../../../models/CouponModel\";\nimport { couponAddedAction2 } from \"../../../Redux/CouponsState\";\nimport store from \"../../../Redux/Store\";\nimport globals from \"../../../Services/Globals\";\nimport tokenAxios from \"../../../Services/InterceptorAxios\";\nimport notify, { ErrMsg, SccMsg } from \"../../../Services/Notification\";\nimport \"./CouponDetails.css\";\n\ninterface RouteParam {\n    id: string;\n};\n\ninterface DetailsProps extends RouteComponentProps<RouteParam> { };\n\nconst  CouponDetails=(props:DetailsProps): JSX.Element =>{\n    \n    const id = +props.match.params.id;\n    const[coupon,setCoupon] = useState(store.getState().couponsStartState.coupons.find((c) => c.id === id));\n    const history = useHistory(); \n    const [disabled,setDisabled] = useState(true);\n    \n    const purchase = async(c:CouponModel) =>{\n        if(store.getState().authLoginState.client?.clientType!==ClientType.customer||store.getState().authLoginState.client===null){\n            history.push(\"/login\");\n            notify.error(ErrMsg.PLS_LOGIN);\n        };\n      \n        try{\n          const response = await tokenAxios.post<CouponModel>(globals.urls.customer+\"purchase\",c)\n          store.dispatch(couponAddedAction2(response.data));\n          history.push('/customer/coupons');\n          notify.success(SccMsg.PURCHASED_COUPON);\n        }catch(err){\n          notify.error(err.message);\n        };\n      };\n\n   \n\n    useEffect(() => {\n        if(store.getState().authLoginState.client?.clientType===ClientType.customer){\n           setDisabled(false);\n        };\n    },[disabled]);\n\nreturn (\n    <div className=\"CouponDetails \">\n\t\t\t  {coupon&&\n              (\n            <>\n                <h1 id=\"niceTitle\">Details</h1>\n                \n                \n                <div className=\"flip-card\">\n                  <div className=\"flip-card-inner\">\n                          <div className=\"flip-card-front \">\n                            <img className=\"myImage\" src={ globals.urls.company+'images/'+coupon?.id}alt={coupon.title}/>\n                          </div>\n                          <div className=\"flip-card-back\">\n                            <h1 id=\"niceTitle2\">{coupon.title}</h1>\n                            <h2 id=\"infovalue\">{coupon.description}</h2> \n                            <span id=\"info\">Category:<span id=\"infoval\">{coupon.categoryType}</span></span> <br />\n                            <span id=\"info\">Price:<span id=\"infoval\">{coupon.price}$</span></span> <br />\n                            <span id=\"info\">Expiration:<span id=\"infoval\">{coupon.endDate}</span></span> <br />\n                            <span id=\"info\">Amount :<span id=\"infoval\">{coupon.amount}</span></span> <br />\n                            <span id=\"info\">amount:<span id=\"infoval\">{coupon.amount}</span></span> <br />\n                            \n                          </div>\n                  </div>\n                </div>\n                            <br />\n              <Button disabled={disabled} color=\"simple\" onClick={()=>purchase(coupon)}>🛒</Button>\n              <Button><NavLink to=\"/coupons\"><i className=\"tim-icons icon-double-left\"></i></NavLink></Button>\n            </>\n        )}\n    </div>\n  );\n};\n\nexport default CouponDetails;\n","import {  useForm } from 'react-hook-form';\nimport \"./AddCoupon.css\";\nimport { NavLink, useHistory } from \"react-router-dom\";\nimport { useEffect, useState } from \"react\";\nimport store from \"../../../Redux/Store\";\nimport notify, { ErrMsg, SccMsg } from \"../../../Services/Notification\";\nimport tokenAxios from \"../../../Services/InterceptorAxios\";\nimport globals from \"../../../Services/Globals\";\nimport { couponAddedAction } from \"../../../Redux/CouponsState\";\nimport CategoryType from \"../../../models/CategoryTypeModel\";\nimport ClientType from \"../../../models/ClientTypeModel\";\nimport CouponPayLoadModel from \"../../../models/CouponPayLoadModel\";\nimport { Button, Input } from \"reactstrap\";\n\nfunction AddCoupon(): JSX.Element {\n    \n    const {register,handleSubmit,formState:{errors,isDirty, isValid}} = useForm<CouponPayLoadModel>({ mode: \"onTouched\" });\n    const [client,setClient] = useState(store.getState().authLoginState.client);\n    const [count,setCount] = useState(store.getState().couponsState.coupons.length);\n    const [coupon,setCoupon] = useState(null);\n    const history = useHistory();\n   \n    useEffect(()=>{\n        if(store.getState().authLoginState.client?.clientType!==ClientType.company){\n            notify.error(ErrMsg.PLS_LOGIN);\n            history.push(\"/login\");\n        };\n            const unsubscribe = store.subscribe(() => {\n                setCount(store.getState().couponsState.coupons.length);\n            });\n          return unsubscribe;\n    });\n    \n    async function send(coupon:CouponPayLoadModel) {\n        try{\n            const formData = new FormData();\n            formData.append(\"companyId\",coupon.companyId.toString());\n            formData.append(\"title\",coupon.title);\n            formData.append(\"amount\",coupon.amount.toString());\n            formData.append(\"categoryType\",coupon.categoryType);\n            formData.append(\"description\",coupon.description);\n            formData.append(\"startDate\",coupon.startDate.toString());\n            formData.append(\"endDate\",coupon.endDate.toString());\n            formData.append(\"price\",coupon.price.toString());\n            formData.append(\"image\",coupon.image.item(0));\n            const response = await tokenAxios.post<CouponPayLoadModel>(globals.urls.company+\"coupon\",formData);\n            const added = response.data;\n            store.dispatch(couponAddedAction(added));\n            setCoupon(response.data);\n            notify.success(SccMsg.ADDED_COUPON);\n            history.push('/company/coupons');\n        }\n        catch (err) {\n           notify.error(err.message)\n        };\n    };\n\nreturn (\n    <div className=\"AddCoupon cardD\">\n\t\t<h1 id=\"niceTitle\">Add Coupon</h1>\n        <form onSubmit={handleSubmit(send)} >\n                    \n                <label>CompanyId</label> \n                    <input className=\"form-control\" type=\"number\" name=\"companyId\" \n                    defaultValue={client.clientId}\n                        {...register(\"companyId\")}/>\n                        <br />\n                <label>Amount</label> \n                    <input className=\"form-control\" type=\"number\" name=\"amount\" step=\"1\"\n                        {...register(\"amount\",{\n                            required: {\n                            value:true,\n                            message:'Missing Amount'\n                        },\n                            min:{\n                            value:0,\n                            message:'Amount must be greater than zero'\n                        }\n                    })}/>\n                <br />\n                <span id=\"errors\">{errors.amount?.message}</span>\n                <br />\n\n                <label>Category</label>\n                <Input   id=\"exampleSelect1\" type=\"select\" defaultValue={CategoryType.food} className=\"form-control\" {...register(\"categoryType\",{\n                        required:{\n                        value:true,\n                        message:'you must choose a category'\n                        }\n                })}>\n                        <option defaultValue=\"\"  disabled hidden>Choose here</option>\n                        <option  id=\"dark1\" value={CategoryType.food}>FOOD</option>\n                        <option  id=\"dark1\" value={CategoryType.electronics}>ELECTRONICS</option>\n                        <option  id=\"dark1\" value={CategoryType.restaurant}>RESTAURANT</option>\n                        <option  id=\"dark1\" value={CategoryType.vacation}>VACATION</option>\n                        <option  id=\"dark1\" value={CategoryType.lifeStyle}>LIFE STYLE</option>\n                </Input>\n                <br />\n                <span id=\"errors\">{errors.categoryType?.message}</span>\n                \n                <br />\n                <label >Description</label>\n                <input className=\"form-control\" type=\"text\" name=\"description\" \n                    {...register(\"description\",{\n                        required:true,\n                        minLength:10,\n                    })}/>\n                <br />\n                {errors.description?.type==='required' && <span id=\"errors\">Missing description</span>}\n                {errors.description?.type==='minLength' && <span id=\"errors\">Description is too short</span>}\n                <br />\n\n                <label>Start-Date</label>\n                <input className=\"form-control\" type=\"date\" name=\"startDate\"{...register(\"startDate\",{\n                        required:{\n                        value:true,\n                        message:'you must choose a starting date'\n                        }\n                })}/>\n                <br />\n                <span id=\"errors\">{errors.startDate?.message}</span>\n                <br />\n                <label className=\"label-control\">End-Date</label>\n                <input type=\"date\" className=\"form-control datepicker\" name=\"endDate\" {...register(\"endDate\",{\n                        required:{\n                        value:true,\n                        message:'you must choose an expiration date'\n                        }\n                })}/>\n                <br />\n                <span id=\"errors\">{errors.endDate?.message}</span>\n                <br />\n\n                <label>Price</label>\n                <input className=\"form-control\" type=\"number\" name=\"price\" step=\"0.01\" \n                {...register(\"price\",\n                    {\n                        required: {\n                            value:true,\n                            message:'Missing price'},\n                        min:{\n                            value:0,\n                            message:'Price must be greater than zero'}\n                    }\n                )}/>\n                <br />\n                <span id=\"errors\">{errors.price?.message}</span>\n                <br/>\n\n                <label>Title</label>\n                <input className=\"form-control\" type=\"text\" name=\"title\" \n                    {...register(\"title\",{\n                        required:true,\n                        minLength:2,\n                    })}/>\n                     <br />\n                {errors.title?.type==='required' && <span id=\"errors\">Missing title</span>}\n                {errors.title?.type==='minLength' && <span id=\"errors\">Title is too short</span>}\n\n                <br />\n                \n                <label>Image</label>\n                <input className=\"form-control\" type=\"file\" name=\"image\" accept=\"image/*\"  {...register(\"image\",\n                {required: true}\n                )} \n                />\n                <br/>\n                 {errors.image && <span id=\"errors\">Missing image</span>}\n                <br />\n\n                <br />\n                <Button color=\"danger\"><NavLink to=\"/company/coupons\">✖️</NavLink></Button>\n                <Button color=\"success\" variant=\"contained\" type=\"submit\" disabled={!isDirty || !isValid}> ✔️</Button>\n\n        </form>\n    </div>\n  );\n};\n\nexport default AddCoupon;\n","import { useEffect, useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport {  NavLink, useHistory } from \"react-router-dom\";\nimport ClientType from \"../../../models/ClientTypeModel\";\nimport CompanyModel from \"../../../models/CompanyModel\";\nimport { companyAddedAction } from \"../../../Redux/CompaniesState\";\nimport store from \"../../../Redux/Store\";\nimport globals from \"../../../Services/Globals\";\nimport tokenAxios from \"../../../Services/InterceptorAxios\";\nimport notify, { ErrMsg, SccMsg } from \"../../../Services/Notification\";\nimport \"./AddCompany.css\";\nimport classnames from \"classnames\";\nimport \"../../../assets/css/nucleo-icons.css\";\nimport {\n    Button,\n    Card,\n    CardHeader,\n    CardBody,\n    CardFooter,\n    CardImg,\n    CardTitle,\n    Label,\n    FormGroup,\n    Form,\n    Input,\n    InputGroupAddon,\n    InputGroupText,\n    InputGroup,\n    Container,\n    Row,\n    Col,\n  } from \"reactstrap\";\n\n\nfunction AddCompany(): JSX.Element {\n    const {register,handleSubmit,formState: {errors,isDirty,isValid},\n      } = useForm<CompanyModel>({ mode: \"onTouched\" });\n\n    const [nameFocus, setNameFocus] = useState(false);\n    const [emailFocus, setEmailFocus] = useState(false);\n    const [passwordFocus, setPasswordFocus] = useState(false);\n    const[companies,setCompanies] = useState(store.getState().companiesState.companies);\n    const history = useHistory();\n   \n    useEffect(()=>{\n        if(store.getState().authLoginState.client?.clientType!==ClientType.admin){\n            notify.error(ErrMsg.PLS_LOGIN);\n            history.push(\"/login\");\n        };\n        const unsubscribe = store.subscribe(() => {\n            setCompanies( store.getState().companiesState.companies);\n            return unsubscribe;\n          });\n        \n      });\n\n    async function send(company:CompanyModel) {\n        try{\n            const formData = new FormData();\n            formData.append(\"name\",company.name);\n            formData.append(\"email\",company.email);\n            formData.append(\"password\",company.password);\n            const response = await tokenAxios.post<CompanyModel>(globals.urls.admin+\"company\",formData);\n            store.dispatch(companyAddedAction(response.data));\n            history.push('/admin/companies');\n            notify.success(SccMsg.ADDED_COMPANY);\n        }\n        catch (err) {\n          notify.error(err.message);\n        }\n    };\n\nreturn (\n  <div className=\"AddCompany section section-signup\">\n        <Container>\n    <div className=\"squares square-1\" />\n    <div className=\"squares square-2\" />\n    <div className=\"squares square-3\" />\n    <div className=\"squares square-4\" />\n        <Row className=\"row-grid justify-content-between align-items-center\">\n\n             <Col className=\"mb-lg-auto\" lg=\"6\">\n                <Card className=\"card-register\">\n                    <CardHeader>\n                        <CardImg alt=\"...\" src={require(\"../../../assets/img/square-purple-1.png\").default}/>\n                            <CardTitle tag=\"h4\">{'  '} Add</CardTitle>\n                    </CardHeader>\n\n                      <CardBody>\n\n                        <Form className=\"form\" onSubmit={handleSubmit(send)}>\n                              <InputGroup className={classnames({\"input-group-focus\": nameFocus,})}>\n                                  <InputGroupAddon addonType=\"prepend\" >\n                                      <InputGroupText>\n                                          <i className=\"tim-icons icon-single-02\" />\n                                      </InputGroupText>\n                                  </InputGroupAddon>\n                    \n                                          <Input\n                                          className=\"form-control\"\n                                              name=\"name\"\n                                              placeholder=\"Name\"\n                                              type=\"text\"\n                                              onFocus={(e) => setNameFocus(true)}\n                                              onBlur={(e) => setNameFocus(false)}\n                                              {...register(\"name\",{\n                                              required:true,\n                                              minLength:2,\n                                          })}\n                                          />\n                                          <br />\n                                              {errors.name?.type==='required' && <span id=\"errors\">Missing name</span>}\n                                              {errors.name?.type==='minLength' && <span id=\"errors\">Name is too short</span>}\n\n                                              <br />\n                              </InputGroup>\n\n                              <InputGroup  className={classnames({\"input-group-focus\": emailFocus,})}>\n                                  <InputGroupAddon addonType=\"prepend\" >\n                                      <InputGroupText>\n                                          <i className=\"tim-icons icon-email-85\" />\n                                      </InputGroupText>\n                                  </InputGroupAddon>\n                    \n                                              <Input\n                                              className=\"form-control\"\n                                                  name=\"email\"\n                                                  placeholder=\"Email\"\n                                                  type=\"email\"\n                                                  onFocus={(e) => setEmailFocus(true)}\n                                                  onBlur={(e) => setEmailFocus(false)}\n                                                  {...register(\"email\",{\n                                                  required:true,\n                                                  minLength:9,\n                                              })}\n                                              />\n                                          {errors.email?.type==='required' && <span id=\"errors\">Missing email</span>}\n                                          {errors.email?.type==='minLength' && <span id=\"errors\">Email is too short</span>}\n                                          \n                               </InputGroup>\n\n\n                              <InputGroup className={classnames({\"input-group-focus\": passwordFocus,})}>\n                                <InputGroupAddon addonType=\"prepend\">\n                                  <InputGroupText>\n                                      <i className=\"tim-icons icon-lock-circle\" />\n                                  </InputGroupText>\n                                </InputGroupAddon>\n                                              <Input\n                                              className=\"form-control\"\n                                                  name=\"password\"\n                                                  placeholder=\"Password\"\n                                                  type=\"password\"\n                                                  onFocus={(e) => setPasswordFocus(true)}\n                                                  onBlur={(e) => setPasswordFocus(false)}\n                                                  {...register(\"password\",{\n                                                  required:true,\n                                                  minLength:4,\n                                              })}\n                                              />\n                                              <br />\n                                          {errors.password?.type==='required' && <span id=\"errors\">Missing password</span>}\n                                          {errors.password?.type==='minLength' && <span id=\"errors\">Password is too short</span>}\n                                          <br />\n\n                              </InputGroup>\n                              <FormGroup check className=\"text-left\">\n                                <Label check>\n                                  <Input type=\"checkbox\" />\n                                  <span className=\"form-check-sign\" />I agree to the{\" \"}\n                                    <NavLink to=\"/terms\" exact>\n                                    terms and conditions.\n                                    </NavLink>         \n                                  \n                                </Label>\n                              </FormGroup>\n                                          <CardFooter>\n\n                                              <Button type=\"submit\" className=\"btn-round\"  color=\"primary\" size=\"lg\" disabled={!isDirty || !isValid}>✔️</Button>\n                                              <Button className=\"btn-round\" color=\"primary\" size=\"lg\" onClick={() =>{history.push(\"/admin/customers\")}}>✖️</Button>\n                                              \n                                          </CardFooter>\n                        </Form>\n                    </CardBody>\n   \n                </Card>\n              </Col>\n            </Row>\n    </Container>           \n  </div>\n  );\n};\n\nexport default AddCompany;\n\n\n","import { useEffect, useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport {  useHistory } from \"react-router-dom\";\nimport ClientType from \"../../../models/ClientTypeModel\";\nimport CustomerModel from \"../../../models/CustomerModel\";\nimport { customerAddedAction } from \"../../../Redux/CustomersState\";\nimport store from \"../../../Redux/Store\";\nimport globals from \"../../../Services/Globals\";\nimport tokenAxios from \"../../../Services/InterceptorAxios\";\nimport notify, { ErrMsg, SccMsg } from \"../../../Services/Notification\";\nimport classnames from \"classnames\";\nimport \"../../../assets/css/nucleo-icons.css\";\nimport {\n    Button,\n    Card,\n    CardHeader,\n    CardBody,\n    CardFooter,\n    CardImg,\n    CardTitle,\n    Label,\n    FormGroup,\n    Form,\n    Input,\n    InputGroupAddon,\n    InputGroupText,\n    InputGroup,\n    Container,\n    Row,\n    Col,\n  } from \"reactstrap\";\n\n   \nfunction AddCustomer(): JSX.Element{\n    const [fullNameFocus, setFullNameFocus] = useState(false);\n    const [fullLastNameFocus, setFullLastNameFocus] = useState(false);\n    const [emailFocus, setEmailFocus] = useState(false);\n    const [passwordFocus, setPasswordFocus] = useState(false);\n    const[customers,setCustomers] = useState(store.getState().customersState.customers);\n    const {register,handleSubmit,formState:{errors,isDirty, isValid},} = useForm<CustomerModel>({ mode: \"onTouched\" });\n    const history = useHistory();\n\n    useEffect(()=>{\n        if(store.getState().authLoginState.client?.clientType!==ClientType.admin){\n            notify.error(ErrMsg.PLS_LOGIN);\n            history.push(\"/login\");\n        };       \n        const unsubscribe = store.subscribe(() => {\n            setCustomers(store.getState().customersState.customers);\n \n        });\n        return unsubscribe;\n    });\n        \n    async function send(customer:CustomerModel) {\n        try{\n            const formData = new FormData();\n            formData.append(\"firstName\",customer.firstName);\n            formData.append(\"lastName\",customer.lastName);\n            formData.append(\"email\",customer.email);\n            formData.append(\"password\",customer.password);\n            const response = await tokenAxios.post<CustomerModel>(globals.urls.admin+\"customer\",formData);\n            store.dispatch(customerAddedAction(response.data));\n            history.push('/admin/customers');\n            notify.success(SccMsg.ADDED_CUSTOMER);\n        }\n        catch (err) {\n           notify.error(err.message);\n        };\n    };\n    \n return (\n    <div className=\"AddCustomer section section-signup\">\n        <Container>\n                <div className=\"squares square-1\" />\n                <div className=\"squares square-2\" />\n                <div className=\"squares square-3\" />\n                <div className=\"squares square-4\" />\n            <Row className=\"row-grid justify-content-between align-items-center\">\n\n                <Col className=\"mb-lg-auto\" lg=\"6\">\n                    <Card className=\"card-register \">\n                        <CardHeader>\n                            <CardImg  id=\"cardImage1\"\n                            alt=\"...\" \n                            src={require(\"../../../assets/img/square-purple-1.png\").default}\n                            />\n                                <CardTitle id=\"abs1\" tag=\"h4\"> Add</CardTitle>\n                        </CardHeader>\n                <CardBody>\n\n                    <Form className=\"form\" onSubmit={handleSubmit(send)}>\n                            <InputGroup className={classnames({\"input-group-focus\": fullNameFocus,})}>\n                                <InputGroupAddon addonType=\"prepend\" >\n                                    <InputGroupText>\n                                        <i className=\"tim-icons icon-single-02\" />\n                                    </InputGroupText>\n                                </InputGroupAddon>\n                \n                                        <Input\n                                            name=\"firstName\"\n                                            placeholder=\"FirstName\"\n                                            type=\"text\"\n                                            onFocus={(e) => setFullNameFocus(true)}\n                                            onBlur={(e) => setFullNameFocus(false)}\n                                            {...register(\"firstName\",{\n                                            required:true,\n                                            minLength:2,\n                                        })}\n                                        />\n                                        <br />\n                                            {errors.firstName?.type==='required' && <span id=\"errors\">Missing name</span>}\n                                            {errors.firstName?.type==='minLength' && <span id=\"errors\">Name is too short</span>}\n\n                                            <br />\n                            </InputGroup>\n                            <InputGroup className={classnames({\"input-group-focus\": fullLastNameFocus,})}>\n                                <InputGroupAddon addonType=\"prepend\" >\n                                    <InputGroupText>\n                                        <i className=\"tim-icons icon-single-02\" />\n                                    </InputGroupText>\n                                </InputGroupAddon>\n\n                                            <Input\n                                                name=\"lastName\"\n                                                placeholder=\"LastName\"\n                                                type=\"text\"\n                                                onFocus={(e) => setFullLastNameFocus(true)}\n                                                onBlur={(e) => setFullLastNameFocus(false)}\n                                                {...register(\"lastName\",{\n                                                required:true,\n                                                minLength:2,\n                                            })}\n                                            />\n                                            <br />\n                                                {errors.lastName?.type==='required' && <span id=\"errors\">Missing LastName</span>}\n                                                {errors.lastName?.type==='minLength' && <span id=\"errors\">LastName is too short</span>}\n\n                                                <br />\n                            </InputGroup>\n\n                            <InputGroup  className={classnames({\"input-group-focus\": emailFocus,})}>\n                                <InputGroupAddon addonType=\"prepend\" >\n                                    <InputGroupText>\n                                        <i className=\"tim-icons icon-email-85\" />\n                                    </InputGroupText>\n                                </InputGroupAddon>\n                \n                                            <Input\n                                                name=\"email\"\n                                                placeholder=\"Email\"\n                                                type=\"email\"\n                                                onFocus={(e) => setEmailFocus(true)}\n                                                onBlur={(e) => setEmailFocus(false)}\n                                                {...register(\"email\",{\n                                                required:true,\n                                                minLength:9,\n                                            })}\n                                            />\n                                        {errors.email?.type==='required' && <span id=\"errors\">Missing email</span>}\n                                        {errors.email?.type==='minLength' && <span id=\"errors\">Email is too short</span>}\n                                        \n                                    </InputGroup>\n\n\n                                            <InputGroup className={classnames({\"input-group-focus\": passwordFocus,})}>\n                                    <InputGroupAddon addonType=\"prepend\">\n                                        <InputGroupText>\n                                            <i className=\"tim-icons icon-lock-circle\" />\n                                        </InputGroupText>\n                                    </InputGroupAddon>\n                                        <Input\n                                            name=\"password\"\n                                            placeholder=\"Password\"\n                                            type=\"password\"\n                                            onFocus={(e) => setPasswordFocus(true)}\n                                            onBlur={(e) => setPasswordFocus(false)}\n                                            {...register(\"password\",{\n                                            required:true,\n                                            minLength:4,\n                                        })}\n                                        />\n                                        <br />\n                                    {errors.password?.type==='required' && <span id=\"errors\">Missing password</span>}\n                                    {errors.password?.type==='minLength' && <span id=\"errors\">Password is too short</span>}\n                                    <br />\n\n                                    </InputGroup>\n                                        <FormGroup check className=\"text-left\">\n                                        <Label check>\n                                            <Input type=\"checkbox\" />\n                                            <span className=\"form-check-sign\" />I agree to the{\" \"}\n                                            <a href=\"#pablo\" onClick={(e) => e.preventDefault()}>\n                                            terms and conditions\n                                            </a>\n                                            .\n                                        </Label>\n                                        </FormGroup>\n                            <CardFooter >\n\n                                <div className=\"centeral\">\n                                    <Button type=\"submit\" className=\"btn-round\" color=\"primary\" size=\"lg\" disabled={!isDirty || !isValid}>✔️</Button>\n                                    <Button  className=\"btn-round\"  color=\"primary\" size=\"lg\" onClick={() =>{history.push(\"/admin/customers\")}}>✖️</Button>\n                                </div>\n                            </CardFooter>\n                        </Form>\n                    </CardBody>\n                </Card>\n            </Col>\n        </Row>\n        </Container>           \n    </div>\n  );\n};\n\nexport default AddCustomer;\n\n\n","import { useState, useEffect } from \"react\";\nimport { NavLink, useHistory } from \"react-router-dom\";\nimport { Button } from \"reactstrap\";\nimport ClientType from \"../../../../models/ClientTypeModel\";\nimport CompanyModel from \"../../../../models/CompanyModel\";\nimport {companiesDownloadedAction } from \"../../../../Redux/CompaniesState\";\nimport store from \"../../../../Redux/Store\";\nimport globals from \"../../../../Services/Globals\";\nimport tokenAxios from \"../../../../Services/InterceptorAxios\";\nimport notify, { ErrMsg, SccMsg } from \"../../../../Services/Notification\";\nimport EmptyView from \"../../../SharedArea/EmptyView/EmptyView\";\nimport \"./AdminCompanyCards.css\";\n\nconst AdminCompanyCards=():JSX.Element=>{\n  \n  const[companies,setCompanies] = useState(store.getState().companiesState.companies);\n  const history = useHistory();\n\n  const fetchCompanies = async () => {\n \n    if (store.getState().companiesState.companies.length === 0) {\n        const response = await tokenAxios.get<CompanyModel[]>(globals.urls.admin+\"companies\");\n        store.dispatch(companiesDownloadedAction(response.data));\n    if(response.data.length!==0){\n        setCompanies(response.data);\n        notify.success(SccMsg.DOWNLOADED_COMPANIES);\n        return response.data;\n      }\n    else{\n        notify.error(ErrMsg.NO_COMPANIES);\n        return 0;\n        };\n      };\n    };\n\n  useEffect(() => {\n    if (store.getState().authLoginState.client?.clientType!==ClientType.admin) {\n        notify.error(ErrMsg.PLS_LOGIN);\n        history.push(\"/login\");\n      };\n    try{\n        fetchCompanies();\n      }\n    catch(err){\n        notify.error(err.message);\n      };\n      const unsubscribe = store.subscribe(() => {\n        setCompanies( store.getState().companiesState.companies);\n      });     \n    return unsubscribe;\n  });\n\n  \nreturn(\n    <div className=\"AdminCompanyCards AdminCards\">\n\n            {companies&&\n              <div className=\"widthCustom\">\n                    <h1>Companies</h1>\n                    <h3>There are {store.getState().companiesState.companies.length} companies in the system </h3>\n                    <h3>you can always add new companies or customers!!</h3> <br/>\n                    {store.getState().companiesState.companies.length===0&&<EmptyView msg=\"Loading companies!\"/>}\n                    <br />\n                  <Button className=\"btn-round\" color=\"info\" onClick={() =>history.push('/admin/addCompany')}>➕</Button>\n              </div>\n            }\n           \n    \n            {store.getState().companiesState.companies.length!==0&&\n           \n            companies.map((c) =>\n            \n                <div key={c.id} className=\"cardd\">\n                  <div className=\"boxx\">\n                    <div className=\"contentt\">\n                      <h2>{c.id}</h2>\n                      <h3> {c.name} </h3>\n                      <p>{c.email}</p> <br /><br />\n                      <NavLink to={\"/admin/companies/details/\" + c.id}>⇥</NavLink>\n                    </div>\n                  </div>\n                </div>\n            )}\n    </div>\n  );\n};\n\nexport default AdminCompanyCards;\n","import { useEffect, useState } from \"react\";\nimport { NavLink, RouteComponentProps, useHistory } from \"react-router-dom\";\nimport Button from \"reactstrap/lib/Button\";\nimport ClientType from \"../../../models/ClientTypeModel\";\nimport store from \"../../../Redux/Store\";\nimport globals from \"../../../Services/Globals\";\nimport notify, { ErrMsg, SccMsg } from \"../../../Services/Notification\";\nimport \"./CustomerCouponDetails.css\";\n\ninterface RouteParam {\n    id: string;\n};\n\ninterface CustomerDetailsProps extends RouteComponentProps<RouteParam> { };\n\nconst  CustomerCouponDetails=(props:CustomerDetailsProps): JSX.Element =>{\n    \n    const id = +props.match.params.id;\n    const[coupon,setCoupon] = useState(store.getState().couponsState.coupons.find((c) => c.id === id));\n    const history = useHistory();\n\n    const fetchCoupon = async () => {\n        setCoupon(coupon);\n        notify.success(SccMsg.COUPON_LOADED);\n        return coupon; \n    };\n\n    useEffect(() => {\n        if (store.getState().authLoginState.client?.clientType!==ClientType.customer) {\n            notify.error(ErrMsg.PLS_LOGIN);\n            history.push(\"/login\");\n          };\n        try {\n            fetchCoupon();\n        }catch (err) {\n            notify.error(err.message);\n        };\n    });\n\nreturn (\n    <div className=\"CustomerCouponDetails \">\n\t  {coupon&&\n        (\n         <>\n                <h1 id=\"niceTitle\">Details</h1>\n\n                <div className=\"flip-card\">\n                    <div className=\"flip-card-inner\">\n                        <div className=\"flip-card-front \">\n                            <img className=\"myImage\" src={ globals.urls.company+'images/'+coupon?.id}alt={coupon.title}/>\n                        </div>\n                            <div className=\"flip-card-back\">\n                            <h1 id=\"niceTitle2\">{coupon.title}</h1>\n                            <h2 id=\"infovalue\">{coupon.description}</h2> \n                            <span id=\"info\">Category:<span id=\"infoval\">{coupon.categoryType}</span></span> <br />\n                            <span id=\"info\">Price:<span id=\"infoval\">{coupon.price}$</span></span> <br />\n                            <span id=\"info\">Expiration:<span id=\"infoval\">{coupon.endDate}</span></span> <br />\n                            <span id=\"info\">Amount :<span id=\"infoval\">{coupon.amount}</span></span> <br />\n                            <span id=\"info\">amount:<span id=\"infoval\">{coupon.amount}</span></span> <br />\n                            </div>\n                      </div>\n                </div>\n                <br />\n            <Button><NavLink to=\"/customer/coupons\"><i className=\"tim-icons icon-double-left\"></i></NavLink></Button>\n        \n         </>\n      )}\n    </div>\n  );\n};\n\nexport default CustomerCouponDetails;\n","import {  useEffect, useState } from \"react\";\nimport { NavLink, useHistory } from \"react-router-dom\";\nimport { Button } from \"reactstrap\";\nimport ClientType from \"../../../models/ClientTypeModel\";\nimport CouponModel from \"../../../models/CouponModel\";\nimport { couponsDownloadedAction } from \"../../../Redux/CouponsState\";\nimport store from \"../../../Redux/Store\";\nimport globals from \"../../../Services/Globals\";\nimport tokenAxios from \"../../../Services/InterceptorAxios\";\nimport notify, { ErrMsg, SccMsg } from \"../../../Services/Notification\";\nimport EmptyView from \"../../SharedArea/EmptyView/EmptyView\";\nimport \"./CustomerCouponCards.css\";\n\n\nconst CustomerCouponCards = ():JSX.Element=>{\n    const[coupons,setCoupons] = useState(store.getState().couponsState.coupons);\n    const[count,setCount] = useState(0);\n    const history = useHistory();\n\n    const fetchCoupons = async () => {\n      if (count === 0) {\n          const response = await tokenAxios.get<CouponModel[]>(globals.urls.customer+\"coupons\");\n          store.dispatch(couponsDownloadedAction(response.data));\n      if(response.data.length!==0){\n          setCoupons(response.data);\n          notify.success(SccMsg.DOWNLOADED_COUPONS);\n        return response.data;\n      }\n      else{\n        notify.error(ErrMsg.NO_COUPONS);\n        setCount(0);\n        return 0;\n        };\n      };\n    };\n    \n      useEffect(() => {\n        if (store.getState().authLoginState.client?.clientType!==ClientType.customer) {\n          notify.error(ErrMsg.PLS_LOGIN);\n          history.push(\"/login\");\n        }\n        try{\n          fetchCoupons()\n        }catch(err){\n          notify.error(err.message);\n        }\n       const unsubscribe = store.subscribe(() => {\n          setCount(store.getState().couponsState.coupons.length);\n       });\n       return unsubscribe;\n      });    \n\nreturn(\n    <div className=\"CustomerCouponCards CouponCards \">\n        <h1 id=\"niceTitle\">Coupons</h1>\n\t\t      <h3>you have {count} coupons.</h3>\n          <span>if you wanna purchase more coupons i invite you to choose which on the following link <br/> </span>\n          \n          {count===0&&<EmptyView msg=\"Loading coupons\"/>}\n          <br />\n\n          <Button color=\"secondary\"><NavLink  to='/coupons' exact>Coupons</NavLink></Button>\n\n           {count!==0&&( \n              <ul>\n             \n           {coupons.map((coupon)=>\n           \n                <li key={coupon?.id}>\n                <NavLink to={\"/customer/coupons/details/\" + coupon?.id}>\n                  \n                    <div className=\"details\">\n                        <h2> {coupon.title}</h2>\n                        <p> {coupon.price}</p>\n                        <p> {coupon.price}</p>\n\n                        <img src={ globals.urls.company+'images/'+coupon?.id}alt={coupon.title}/>\n                        <img src={globals.urls.company+'images/'+coupon?.id}alt={coupon.title}/>\n                        \n                    </div>\n                  </NavLink>\n              \n                </li>\n          )}\n            </ul>\n          )}\n    </div>\n  );\n};\n\nexport default CustomerCouponCards;\n","import { useEffect,useState } from \"react\";\nimport { useHistory } from \"react-router\";\nimport { NavLink } from \"react-router-dom\";\nimport { Button } from \"reactstrap\";\nimport ClientType from \"../../../models/ClientTypeModel\";\nimport CouponModel from \"../../../models/CouponModel\";\nimport { couponsDownloadedAction } from \"../../../Redux/CouponsState\";\nimport store from \"../../../Redux/Store\";\nimport globals from \"../../../Services/Globals\";\nimport tokenAxios from \"../../../Services/InterceptorAxios\";\nimport notify, { ErrMsg, SccMsg } from \"../../../Services/Notification\";\nimport EmptyView from \"../../SharedArea/EmptyView/EmptyView\";\nimport \"./CompanyCouponCards.css\";\n\n\nconst CompanyCouponCards = () => {\n  const [coupons, setCoupons] = useState([]);\n  const [count,setCount]=useState(0);\n  const history = useHistory();\n\n  const fetchCoupons = async () => {\n    \n    if (count === 0) {\n        const response = await tokenAxios.get<CouponModel[]>(globals.urls.company+\"coupons\");\n        store.dispatch(couponsDownloadedAction(response.data));\n\n        if(response.data.length!==0){\n            setCoupons(response.data);\n            notify.success(SccMsg.DOWNLOADED_COUPONS);\n          return response.data; \n        } \n        else{\n            notify.error(ErrMsg.NO_COUPONS);\n        return 0;\n        };\n    };\n  };\n \n  \n  useEffect(() => {\n    if (store.getState().authLoginState.client?.clientType!==ClientType.company) {\n        notify.error(ErrMsg.PLS_LOGIN);\n        history.push(\"/login\");\n    };\n      try{\n        fetchCoupons();\n        }   \n      catch(err){\n        notify.error(err.message);\n        };\n        const unsubscribe = store.subscribe(() => {\n            setCount(store.getState().couponsState.coupons.length);\n        });\n        return unsubscribe;\n    });\n\nreturn (\n    <div className=\"CompanyCouponCards CouponCards\">\n          <h1 id=\"niceTitle\">Coupons</h1>\n\n          {store.getState().couponsState.coupons.length===0&&<EmptyView msg=\"Loading coupons!\"/>}\n\n          <h1>There are {store.getState().couponsState.coupons.length} coupons in your company</h1>\n\n          <Button className=\"btn-round\" color=\"info\" onClick={()=>{history.push(\"/company/addcoupon\")}}>➕</Button>\n      \n          {store.getState().couponsState.coupons.length!==0&&  \n          (\n            <ul>\n              {coupons.map((coupon) =>\n                    <li key={coupon?.id} >\n                    <NavLink to={\"/company/coupons/details/\" + coupon?.id } exact>\n                \n                        <div className=\"details\">\n                            <h2> {coupon?.title}</h2>\n                            <p> {coupon?.price}$</p>\n                            <p> {coupon?.price}$</p>\n                            \n                            <img src={ globals.urls.company+'images/'+coupon?.id}alt={coupon?.title}/>\n                            <img src={globals.urls.company+'images/'+coupon?.id}alt={coupon?.title}/>\n                            \n                        </div>\n                    </NavLink>\n                    </li> \n              )}\n            </ul>\n          )}\n    </div>\n  );\n};\n\nexport default CompanyCouponCards;\n","import { NavLink } from \"react-router-dom\";\nimport Button from \"reactstrap/lib/Button\";\nimport \"./SignUp.css\";\n\nfunction SignUp(): JSX.Element {\n    return (\n        <div className=\"SignUp\">\n             <h2 id=\"niceTitle\">SignUp</h2>\n                <div className=\"container1\">\n                    <div className=\"item\">\n                    <NavLink id=\"info\" to=\"/companySignUp\"><Button size=\"lg\">Company</Button></NavLink>\n                    </div>\n                    <div className=\"item1\">\n                    <NavLink  id=\"info\" to=\"/customerSignUp\"><Button size=\"lg\" color=\"default\">Customer</Button></NavLink>\n                    </div>\n                </div>\n\n            <div className=\"item2\"><NavLink to=\"/home\"><Button color=\"info\"><i className=\"tim-icons icon-double-left\"></i></Button></NavLink></div>\n\n        </div>\n    );\n};\n\nexport default SignUp;\n","import \"./CompanySignUp.css\";\nimport { useForm } from \"react-hook-form\";\nimport {  NavLink, useHistory } from \"react-router-dom\";\nimport tokenAxios from \"../../../../Services/InterceptorAxios\";\nimport globals from \"../../../../Services/Globals\";\nimport store from \"../../../../Redux/Store\";\nimport { registerAction1 } from \"../../../../Redux/AuthState\";\nimport notify, { SccMsg } from \"../../../../Services/Notification\";\nimport CompanySignUpModel from \"../../../../models/CompanySignUpModel\";\nimport ClientType from \"../../../../models/ClientTypeModel\";\nimport { useEffect, useState } from \"react\";\nimport { couponsClearedAction } from \"../../../../Redux/CouponsState\";\nimport classnames from \"classnames\";\nimport \"../../../../assets/css/nucleo-icons.css\";\nimport {\n    Button,\n    Card,\n    CardHeader,\n    CardBody,\n    CardFooter,\n    CardImg,\n    CardTitle,\n    Label,\n    FormGroup,\n    Form,\n    Input,\n    InputGroupAddon,\n    InputGroupText,\n    InputGroup,\n    Container,\n    Row,\n    Col,\n  } from \"reactstrap\";\n\nfunction CompanySignUp(): JSX.Element {\n    const [fullNameFocus, setFullNameFocus] = useState(false);\n    const [emailFocus, setEmailFocus] = useState(false);\n    const [passwordFocus, setPasswordFocus] = useState(false);\n    const [coupons,setCoupons] = useState(null);\n    const history = useHistory(); \n    const {\n      register,\n      handleSubmit,\n      formState: { errors, isDirty, isValid\t },\n    } = useForm<CompanySignUpModel>({ mode: \"onTouched\" });\n\n  async function send(company: CompanySignUpModel){\n      try{ \n          const response = await tokenAxios.post<CompanySignUpModel>(globals.urls.client+\"signup\",company);\n          store.dispatch(registerAction1(response.data));\n          notify.success(SccMsg.REGISTER_SUCCESS);\n          history.push(\"/company\"); \n        }\n        catch(err){\n            notify.error(err.message);\n       };\n  };\n\n  useEffect(() => {\n      store.dispatch(couponsClearedAction());\n\n        const unsubscribe = store.subscribe(()=>{\n            setCoupons(store.getState().couponsState.coupons);\n        });\n          return unsubscribe; \n  });\n\nreturn (\n    <div className=\"section section-signup\">\n        <Container>\n        <div className=\"squares square-1\" />\n        <div className=\"squares square-2\" />\n        <div className=\"squares square-3\" />\n        <div className=\"squares square-4\" />\n            <Row className=\"row-grid justify-content-between align-items-center\">\n   \n              <Col className=\"mb-lg-auto\" lg=\"6\">\n                <Card className=\"card-register\">\n                  <CardHeader>\n                  <CardImg alt=\"...\" src={require(\"../../../../assets/img/square-purple-1.png\").default}/>\n                  <CardTitle tag=\"h4\">{' '}SignUp</CardTitle>\n                  </CardHeader>\n              <CardBody>\n                  <Form className=\"form\" onSubmit={handleSubmit(send)}>\n                          <InputGroup className={classnames({\"input-group-focus\": fullNameFocus,})}>\n                            <InputGroupAddon addonType=\"prepend\" >\n                              <InputGroupText>\n                                <i className=\"tim-icons icon-single-02\" />\n                              </InputGroupText>\n                            </InputGroupAddon>\n                    \n                                      <Input\n                                      name=\"name\"\n                                        placeholder=\"Name\"\n                                        type=\"text\"\n                                        onFocus={(e) => setFullNameFocus(true)}\n                                        onBlur={(e) => setFullNameFocus(false)}\n                                        {...register(\"name\",{\n                                          required:true,\n                                          minLength:2,\n                                      })}\n                                      />\n                                      <br />\n                                        {errors.name?.type==='required' && <span id=\"errors\">Missing name</span>}\n                                        {errors.name?.type==='minLength' && <span id=\"errors\">Name is too short</span>}\n\n                                        <br />\n                            </InputGroup>\n                            \n                            <InputGroup>\n                              <InputGroupAddon addonType=\"prepend\" >\n                                <InputGroupText>\n                                  <i className=\"tim-icons icon-email-85\" />\n                              </InputGroupText>\n                            </InputGroupAddon>\n                  \n                                    <Input\n                                    name=\"email\"\n                                      placeholder=\"Email\"\n                                      type=\"email\"\n                                      onFocus={(e) => setEmailFocus(true)}\n                                      onBlur={(e) => setEmailFocus(false)}\n                                      {...register(\"email\",{\n                                        required:true,\n                                        minLength:9,\n                                    })}\n                                    />\n                                {errors.email?.type==='required' && <span id=\"errors\">Missing email</span>}\n                                {errors.email?.type==='minLength' && <span id=\"errors\">Email is too short</span>}\n                              \n                        </InputGroup>\n                        <InputGroup\n                          className={classnames({\n                            \"input-group-focus\": emailFocus,\n                          })}\n                        >\n                          <InputGroupAddon addonType=\"prepend\">\n                            <InputGroupText>\n                            <i className=\"tim-icons icon-lock-circle\" />\n                            </InputGroupText>\n                          </InputGroupAddon>\n                          <Input\n                            name=\"password\"\n                            placeholder=\"Password\"\n                            type=\"password\"\n                            onFocus={(e) => setPasswordFocus(true)}\n                            onBlur={(e) => setPasswordFocus(false)}\n                            {...register(\"password\",{\n                              required:true,\n                              minLength:4,\n                          })}\n                          />\n                          <br />\n                      {errors.password?.type==='required' && <span id=\"errors\">Missing password</span>}\n                      {errors.password?.type==='minLength' && <span id=\"errors\">Password is too short</span>}\n                      <br />\n\n                        </InputGroup>\n                        <InputGroup\n                          className={classnames({\n                            \"input-group-focus\": passwordFocus,\n                          })}\n                        >\n                          <InputGroupAddon addonType=\"prepend\">\n                            <InputGroupText>\n                            \n                            </InputGroupText>\n                          </InputGroupAddon>\n\n                          <Input\n                          name=\"clientType\"\n                          placeholder=\"clientType\"\n                          type=\"select\"\n                          id=\"exampleSelect1\"\n                          {...register(\"clientType\",{\n                              required:{\n                              value:true,\n                              message:'you must choose a clientType'\n                              }\n                      })}>\n                              \n                              <option value={ClientType.company}>COMPANY</option>                  \n                            \n                              \n                      </Input>\n                      <br />\n                      <span id=\"errors\">{errors.clientType?.message}</span>\n                      \n                      <br />\n\n                        </InputGroup> \n                        <FormGroup check className=\"text-left\">\n                          <Label check>\n                            <Input required type=\"checkbox\" />\n                            <span className=\"form-check-sign\" />I agree to the{\" \"}\n                            <NavLink  to=\"/terms\" exact>\n                                    terms and conditions\n                                  </NavLink>\n                            .\n                          </Label>\n                        </FormGroup>\n                  <CardFooter>\n                      <Button type=\"submit\" className=\"btn-round\" color=\"primary\" size=\"lg\" disabled={!isDirty || !isValid}>✔️</Button>\n                      <Button className=\"btn-round\" color=\"primary\" size=\"lg\" onClick={() =>{history.push(\"/home\")}}>✖️</Button>\n                  </CardFooter>\n                </Form>\n              </CardBody>\n            </Card>\n          </Col>\n        </Row>\n        </Container>           \n    </div>\n  );\n};\n\nexport default CompanySignUp;\n","import \"./CustomerSignUp.css\";\nimport { useForm } from \"react-hook-form\";\nimport notify, { SccMsg } from \"../../../../Services/Notification\";\nimport store from \"../../../../Redux/Store\";\nimport globals from \"../../../../Services/Globals\";\nimport { NavLink, useHistory } from \"react-router-dom\";\nimport { registerAction2 } from \"../../../../Redux/AuthState\";\nimport CustomerSignUpModel from \"../../../../models/CustomerSignUpModel\";\nimport { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { couponsClearedAction } from \"../../../../Redux/CouponsState\";\nimport ClientType from \"../../../../models/ClientTypeModel\";\nimport classnames from \"classnames\";\nimport \"../../../../assets/css/nucleo-icons.css\";\nimport {\n    Button,\n    Card,\n    CardHeader,\n    CardBody,\n    CardFooter,\n    CardImg,\n    CardTitle,\n    Label,\n    FormGroup,\n    Form,\n    Input,\n    InputGroupAddon,\n    InputGroupText,\n    InputGroup,\n    Container,\n    Row,\n    Col,\n  } from \"reactstrap\";\n\nfunction CustomerSignUp(): JSX.Element {\n    const [fullNameFocus, setFullNameFocus] = useState(false);\n    const [fullLastNameFocus, setFullLastNameFocus] = useState(false);\n    const [emailFocus, setEmailFocus] = useState(false);\n    const [passwordFocus, setPasswordFocus] = useState(false);\n    const [coupons,setCoupons] = useState(null);\n    const {register,handleSubmit, formState: { errors, isDirty, isValid\t },} = useForm<CustomerSignUpModel>({ mode: \"onTouched\" });\n    const history = useHistory(); \n\n    async function send(customer:CustomerSignUpModel) {\n        try{\n            const response = await axios.post<CustomerSignUpModel>(globals.urls.client+\"signup1\",customer);\n            store.dispatch(registerAction2(response.data));\n            notify.success(SccMsg.REGISTER_SUCCESS);\n            history.push(\"/customer\"); \n        }\n        catch (err) {\n            notify.error(err.message);\n        };\n    };\n\n    useEffect(() => {\n        store.dispatch(couponsClearedAction());\n          const unsubscribe = store.subscribe(()=>{\n          setCoupons(store.getState().couponsState.coupons);\n        });\n      return unsubscribe; \n    });\n\nreturn (\n  <div className=\"section section-signup\">\n        <Container>\n        <div className=\"squares square-1\" />\n        <div className=\"squares square-2\" />\n        <div className=\"squares square-3\" />\n        <div className=\"squares square-4\" />\n            <Row className=\"row-grid justify-content-between align-items-center\">\n   \n                 <Col className=\"mb-lg-auto\" lg=\"6\">\n                    <Card className=\"card-register\">\n                        <CardHeader>\n                            <CardImg alt=\"...\" src={require(\"../../../../assets/img/square-purple-1.png\").default}/>\n                                <CardTitle tag=\"h4\">{' '}SignUp</CardTitle>\n                        </CardHeader>\n                <CardBody>\n                      <Form className=\"form\" onSubmit={handleSubmit(send)}>\n                            <InputGroup className={classnames({\"input-group-focus\": fullNameFocus,})}>\n                                <InputGroupAddon addonType=\"prepend\" >\n                                    <InputGroupText>\n                                        <i className=\"tim-icons icon-single-02\" />\n                                    </InputGroupText>\n                                </InputGroupAddon>\n                  \n                                        <Input\n                                            name=\"firstName\"\n                                            placeholder=\"FirstName\"\n                                            type=\"text\"\n                                            onFocus={(e) => setFullNameFocus(true)}\n                                            onBlur={(e) => setFullNameFocus(false)}\n                                            {...register(\"firstName\",{\n                                            required:true,\n                                            minLength:2,\n                                        })}\n                                        />\n                                        <br />\n                                            {errors.firstName?.type==='required' && <span id=\"errors\">Missing name</span>}\n                                            {errors.firstName?.type==='minLength' && <span id=\"errors\">Name is too short</span>}\n\n                                            <br />\n                            </InputGroup>\n                            <InputGroup className={classnames({\"input-group-focus\": fullLastNameFocus,})}>\n                                <InputGroupAddon addonType=\"prepend\" >\n                                    <InputGroupText>\n                                        <i className=\"tim-icons icon-single-02\" />\n                                    </InputGroupText>\n                                </InputGroupAddon>\n                \n                                            <Input\n                                                name=\"lastName\"\n                                                placeholder=\"LastName\"\n                                                type=\"text\"\n                                                onFocus={(e) => setFullLastNameFocus(true)}\n                                                onBlur={(e) => setFullLastNameFocus(false)}\n                                                {...register(\"lastName\",{\n                                                required:true,\n                                                minLength:2,\n                                            })}\n                                            />\n                                            <br />\n                                                {errors.lastName?.type==='required' && <span id=\"errors\">Missing name</span>}\n                                                {errors.lastName?.type==='minLength' && <span id=\"errors\">Name is too short</span>}\n\n                                                <br />\n                            </InputGroup>\n\n                            <InputGroup  className={classnames({\"input-group-focus\": emailFocus,})}>\n                          <InputGroupAddon addonType=\"prepend\" >\n                            <InputGroupText>\n                            <i className=\"tim-icons icon-email-85\" />\n                            </InputGroupText>\n                          </InputGroupAddon>\n                  \n                          <Input\n                          name=\"email\"\n                            placeholder=\"Email\"\n                            type=\"email\"\n                            onFocus={(e) => setEmailFocus(true)}\n                            onBlur={(e) => setEmailFocus(false)}\n                            {...register(\"email\",{\n                              required:true,\n                              minLength:9,\n                          })}\n                          />\n                      {errors.email?.type==='required' && <span id=\"errors\">Missing email</span>}\n                      {errors.email?.type==='minLength' && <span id=\"errors\">Email is too short</span>}\n                    \n                        </InputGroup>\n\n\n                        <InputGroup className={classnames({\"input-group-focus\": passwordFocus,})}>\n                          <InputGroupAddon addonType=\"prepend\">\n                            <InputGroupText>\n                                <i className=\"tim-icons icon-lock-circle\" />\n                            </InputGroupText>\n                          </InputGroupAddon>\n                        <Input\n                            name=\"password\"\n                            placeholder=\"Password\"\n                            type=\"password\"\n                            onFocus={(e) => setPasswordFocus(true)}\n                            onBlur={(e) => setPasswordFocus(false)}\n                            {...register(\"password\",{\n                              required:true,\n                              minLength:4,\n                          })}\n                          />\n                          <br />\n                      {errors.password?.type==='required' && <span id=\"errors\">Missing password</span>}\n                      {errors.password?.type==='minLength' && <span id=\"errors\">Password is too short</span>}\n                      <br />\n\n                        </InputGroup>\n                        <InputGroup>\n                          <InputGroupAddon addonType=\"prepend\">\n                            <InputGroupText>\n                            \n                            </InputGroupText>\n                          </InputGroupAddon>\n\n                          <Input\n                          name=\"clientType\"\n                          placeholder=\"clientType\"\n                          type=\"select\"\n                          id=\"exampleSelect1\"\n                          {...register(\"clientType\",{\n                              required:{\n                              value:true,\n                              message:'you must choose a clientType'\n                              }\n                      })}>\n                              \n                              <option value={ClientType.customer}>CUSTOMER</option>                  \n                            \n                              \n                      </Input>\n                      <br />\n                      <span id=\"errors\">{errors.clientType?.message}</span>\n                      \n                      <br />\n\n                        </InputGroup> \n                        <FormGroup check className=\"text-left\">\n                          <Label check>\n                            <Input type=\"checkbox\" />\n                            <span className=\"form-check-sign\" />I agree to the{\" \"}\n                            <NavLink to=\"/terms\" exact>\n                                    terms and conditions\n                                  </NavLink>\n                            .\n                          </Label>\n                        </FormGroup>\n\n                  <CardFooter>\n                      <Button type=\"submit\" className=\"btn-round\" color=\"primary\" size=\"lg\" disabled={!isDirty || !isValid}>✔️</Button>\n                      <Button className=\"btn-round\" color=\"primary\" size=\"lg\" onClick={() =>{history.push(\"/home\")}}>✖️</Button>\n                  </CardFooter>\n                </Form>\n              </CardBody>\n            </Card>\n          </Col>\n        </Row>\n      </Container>           \n    </div>\n  );\n};\n\nexport default CustomerSignUp;\n","import { useState, useEffect } from \"react\";\nimport { NavLink, useHistory } from \"react-router-dom\";\nimport Button from \"reactstrap/lib/Button\";\nimport ClientType from \"../../../../models/ClientTypeModel\";\nimport CustomerModel from \"../../../../models/CustomerModel\";\nimport {customersDownloadedAction } from \"../../../../Redux/CustomersState\";\nimport store from \"../../../../Redux/Store\";\nimport globals from \"../../../../Services/Globals\";\nimport tokenAxios from \"../../../../Services/InterceptorAxios\";\nimport notify, { ErrMsg, SccMsg } from \"../../../../Services/Notification\";\nimport EmptyView from \"../../../SharedArea/EmptyView/EmptyView\";\nimport \"./AdminCustomerCards.css\";\n\nconst AdminCustomerCards =():JSX.Element =>{\n  \n  const[customers,setCustomers] = useState(store.getState().customersState.customers);\n  const history = useHistory();\n\n  const fetchCustomers = async () => {\n \n    if (store.getState().customersState.customers.length === 0) {\n        const response = await tokenAxios.get<CustomerModel[]>(globals.urls.admin+\"customers\");\n        store.dispatch(customersDownloadedAction(response.data));\n    if(response.data.length!==0){\n        setCustomers(response.data);\n        notify.success(SccMsg.DOWNLOADED_COMPANIES);\n      return response.data;\n    }\n    else{\n        notify.error(ErrMsg.NO_COMPANIES);\n      return 0;\n        };\n      };\n    };\n\n  useEffect(() => {\n    if (store.getState().authLoginState.client?.clientType!==ClientType.admin) {\n        notify.error(ErrMsg.PLS_LOGIN);\n        history.push(\"/login\");\n    };\n    try{\n        fetchCustomers();\n    }\n    catch(err){\n         notify.error(err.message);\n    };\n      const unsubscribe = store.subscribe(() => {\n        setCustomers( store.getState().customersState.customers); \n      });     \n    return unsubscribe;\n  });\n\n  \nreturn(\n    <div className=\"AdminCustomerCards AdminCards\">\n          {customers&&\n            <div className=\"widthCustom\">\n                <h1>Customers</h1>\n                <h3>There are {store.getState().customersState.customers.length} customers in the system </h3>\n                <h3>you can always add new companies or customers!!</h3> <br />\n                {store.getState().customersState.customers.length===0&&<EmptyView msg=\"customers on the way!\"/>} <br />\n              <Button className=\"btn-round\" color=\"info\"  onClick={() =>history.push('/admin/addCustomer')}>➕ </Button>\n            </div>\n          }\n            \n           \n    \n          {store.getState().customersState.customers.length!==0&&customers.map((c) =>\n       \n              <div key={c.id}  className=\"cardd\">\n                <div className=\"boxx\">\n                  <div className=\"contentt\">\n                      <h2>{c.id}</h2>\n                      <h3> {c.firstName} </h3>\n                      <p>{c.email}</p> <br /><br />\n                      <NavLink to={\"/admin/customers/details/\" + c.id}>⇥</NavLink>\n                  </div>\n                </div>\n              </div>\n          )}\n      </div>\n  );\n};\n\nexport default AdminCustomerCards;\n","import { useEffect, useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { NavLink, RouteComponentProps, useHistory } from \"react-router-dom\";\nimport Button from \"reactstrap/lib/Button\";\nimport ClientType from \"../../../../models/ClientTypeModel\";\nimport CustomerModel from \"../../../../models/CustomerModel\";\nimport { customerDeletedAction, customerUpdatedAction } from \"../../../../Redux/CustomersState\";\nimport store from \"../../../../Redux/Store\";\nimport globals from \"../../../../Services/Globals\";\nimport tokenAxios from \"../../../../Services/InterceptorAxios\";\nimport notify, { ErrMsg, SccMsg } from \"../../../../Services/Notification\";\nimport \"./AdminCustomerDetails.css\";\n\ninterface RouteParam {\n    id: string;\n};\n\ninterface CustomerDetailsProps extends RouteComponentProps<RouteParam> { };\n\nconst AdminCustomerDetails =(props:CustomerDetailsProps): JSX.Element=>{\n \n  const id = +props.match.params.id;\n  const [customer,setCustomer] = useState(store.getState().customersState.customers.find((c) => c.id === id));\n  const {register,handleSubmit,formState:{errors,isDirty, isValid\t }} = useForm< CustomerModel>({\n    mode: \"onTouched\"\n        });\n  const history = useHistory();\n  const[customers,setCustomers] = useState(store.getState().customersState.customers);\n  const [disabled,setDisabled] = useState(true);\n  const [firstName,setFirstName] = useState(customer?.firstName);\n  const [lastName,setLastName] = useState(customer?.lastName);\n  const [email,setEmail] = useState(customer?.email);\n  const [password,setPassword] = useState(customer?.password);\n\n  const updateCustomer = async (customer:CustomerModel) => {\n    try {\n      customer.id = id; \n      const response =await tokenAxios.put<CustomerModel>(globals.urls.admin+\"customer\",customer);\n      store.dispatch(customerUpdatedAction( response.data));\n      setCustomer( response.data);\n      notify.success(SccMsg.UPDATED_SUCCESS);  \n      history.push('/admin/customers'); \n    }catch (err) {\n      notify.error(err.message);\n    };\n  };\n\n  const fetchCustomer = async() =>{\n    setCustomer(customer);  \n    return customer;\n  };\n\n  useEffect(() => {\n    if (store.getState().authLoginState.client?.clientType!==ClientType.admin) {\n        notify.error(ErrMsg.PLS_LOGIN);\n        history.push(\"/login\");\n    };\n    try { \n        fetchCustomer();\n    }catch (err) {\n        notify.error(err.message);\n    };\n      const unsubscribe = store.subscribe(()=>{\n        setCustomers(store.getState().customersState.customers);    \n    });\n    return unsubscribe;\n  });\n\n  const deleteCustomer = async () => {\n    const res = window.confirm(\n      \"Are you sure you want to delete id=\" + id + \"?\"\n    );\n    if (res) {\n      try {\n        await tokenAxios.delete<CustomerModel>(globals.urls.admin+\"company/\"+id);\n        store.dispatch(customerDeletedAction(id));\n        notify.success(SccMsg.DELETED_SUCCESS);\n        history.push('/admin/customers');\n      }catch (err) {\n       notify.error(err.message);\n      };\n    };\n  };\n   \n  const handleFirstName = (e: { target: { value: string; }; }) =>{\n      setFirstName(e.target.value);\n      return firstName; \n  };\n  const handleLastName = (e: { target: { value: string; }; }) =>{\n      setLastName(e.target.value);\n      return lastName; \n  };\n  const handleEmail = (e: { target: { value: string; }; }) =>{\n      setEmail(e.target.value);\n      return email; \n  };\n  const handlePassword = (e: { target: { value: string; }; }) =>{\n      setPassword(e.target.value);\n      return password; \n  };\n\nreturn(\n    <div className=\"AdminCustomerDetails cardD\">\n    {customer && (\n      <>\n            <h2 id=\"niceTitle\">Details</h2>\n       <form onSubmit={handleSubmit(updateCustomer)} >\n          <Button  type=\"button\" onClick={()=>setDisabled(false)} >✏️</Button> <br />\n  \n              <label>ID</label>\n                <input className=\"form-control\" type=\"number\" disabled  name=\"id\" defaultValue ={customer?.id}\n                    {...register(\"id\",{required:true})}/> <br />\n                 \n              <label>FirstName</label>\n                <input className=\"form-control\" type=\"text\" disabled={disabled}  name=\"firstName\" defaultValue ={customer?.firstName}\n                    onChange={()=>handleFirstName}{...register(\"firstName\",{\n                        required:true,\n                        minLength:2,\n                })}/>   \n                {errors.firstName?.type==='required' && <span id=\"errors\">Missing name</span>}\n                {errors.firstName?.type==='minLength' && <span id=\"errors\">Name is too short</span>}\n                <br />\n\n              <label>LastName</label>\n                <input className=\"form-control\" type=\"text\" disabled={disabled}  name=\"lastName\" defaultValue ={customer?.lastName}\n                    onChange={()=>handleLastName}{...register(\"lastName\",{\n                        required:true,\n                        minLength:2,\n                })}/>\n                {errors.lastName?.type==='required' && <span id=\"errors\">Missing name</span>}\n                {errors.lastName?.type==='minLength' && <span id=\"errors\">Name is too short</span>}\n                <br />\n\n              <label >Email</label>\n                <input className=\"form-control\" type=\"email\" disabled={disabled} name=\"email\" defaultValue={customer?.email} \n                    onChange={()=>handleEmail}{...register(\"email\",{\n                        required:true,\n                        minLength:9,\n                })}/>\n                {errors.email?.type==='required' && <span id=\"errors\">Missing email</span>}\n                {errors.email?.type==='minLength' && <span id=\"errors\">Email is too short</span>}\n                <br />\n\n              <label >Password</label>\n                <input className=\"form-control\" type=\"password\" disabled={disabled} name=\"password\" defaultValue={customer?.password} \n                    onChange={()=>handlePassword}{...register(\"password\",{\n                        required:true,\n                        minLength:4,\n                })}/>\n                {errors.password?.type==='required' && <span id=\"errors\">Missing password</span>}\n                {errors.password?.type==='minLength' && <span id=\"errors\">Password is too short</span>}\n                <br />\n\n              <Button  type=\"submit\"  size=\"lg\" disabled={!isDirty || !isValid}>✔️</Button>\n              <Button onClick={() => deleteCustomer()}  size=\"lg\"> 🗑️</Button>\n       </form>\n              <Button><NavLink to=\"/admin/customers\"><i className=\"tim-icons icon-double-left\"></i></NavLink></Button>\n\n      </>\n    )}\n    </div>\n  );\n};\n\n\n\nexport default AdminCustomerDetails;\n\n\n\n","import { NavLink } from \"react-router-dom\";\nimport { Button } from \"reactstrap\";\nimport \"./Terms.css\";\n\nfunction Terms(): JSX.Element {\n    return (\n        <div className=\"Terms\">\n            <h1 id=\"niceTitle2\">There are no terms for now ...</h1>\n\t\t\t<img src=\"https://media.giphy.com/media/39pGKIF075UuS7nxrI/giphy.gif\" alt=\"jk\" />\n            <br /><br />\n            <Button><NavLink to=\"/home\"><i className=\"tim-icons icon-double-left\"></i></NavLink></Button>\n        </div>\n    );\n};\n\nexport default Terms;\n","import \"./About.css\";\n\nfunction About(): JSX.Element {\n    return (\n        <div className=\"About\">\n\t\t\t<h1 id=\"niceTitle\">About</h1>\n            <span>This is a coupon management page , built with React.js and Spring Framework</span> <br />\n            <span>To see the page functionalities you have to sign up or login </span> <br /><br />\n            \n                <h4 id=\"niceTitle3\">Admin:</h4>\n                <ul>\n                    <li>Get All companies/customers</li>\n                    <li>Get company/customer</li>\n                    <li>Add company/customer</li>\n                    <li>Delete company/customer</li>\n                    <li>Update company/customer</li>\n                </ul>\n\n                <h4 id=\"niceTitle3\">Company:</h4>\n                <ul>\n                    <li>Get All company coupons</li>\n                    <li>Get company coupon</li>\n                    <li>Add Coupon</li>\n                    <li>Delete Coupon</li>\n                    <li>Update Coupon</li>\n                </ul>\n\n                <h4 id=\"niceTitle3\">Customer:</h4>\n                <ul>\n                    <li>Get All Coupons</li>\n                    <li>Get Customer coupon</li>\n                    <li>Purchase (add) Coupon</li>\n                </ul>\n\n                <span><span id=\"errors\">note:</span>everyone can see All coupons at All times <br/> just go to Home and press See All coupons!</span><br /><br />\n                <span>Made by <a href=\"https://www.linkedin.com/in/mijael-rofe-42a264180/\" target=\"_blank\"  rel=\"noreferrer\" >Mijael Rofe</a></span><br />\n                      \n\n        </div>\n    );\n}\n\nexport default About;\n","import {Redirect, Route, Switch } from \"react-router-dom\";\nimport AdminCompanyDetails from \"../../Admin/Admin-CompanyArea/AdminCompanyDetails/AdminCompanyDetails\";\nimport CompanyCouponDetails from \"../../Company/CompanyCouponDetails/CompanyCouponDetails\";\nimport Login from \"../../Forms/Login/Login\";\nimport Logout from \"../../Forms/Logout/Logout\";\nimport Page404 from \"../../SharedArea/Page404/Page404\";\nimport Home from \"../Home/Home\";\nimport CouponCards from \"../../Coupons/CouponCards/CouponCards\";\nimport CouponDetails from \"../../Coupons/CouponDetails/CouponDetails\";\nimport AddCoupon from \"../../Forms/AddCoupon/AddCoupon\";\nimport AddCompany from \"../../Forms/AddCompany/AddCompany\";\nimport AddCustomer from \"../../Forms/AddCustomer/AddCustomer\";\nimport AdminCompanyCards from \"../../Admin/Admin-CompanyArea/AdminCompanyCards/AdminCompanyCards\";\nimport CustomerCouponDetails from \"../../Customer/CustomerCouponDetails/CustomerCouponDetails\";\nimport CustomerCouponCards from \"../../Customer/CustomerCouponCards/CustomerCouponCards\";\nimport CompanyCouponCards from \"../../Company/CompanyCouponCards/CompanyCouponCards\";\nimport SignUp from \"../../Forms/SignUp/SignUp\";\nimport CompanySignUp from \"../../Forms/SignUp/CompanySignUp/CompanySignUp\";\nimport CustomerSignUp from \"../../Forms/SignUp/CustomerSignUp/CustomerSignUp\";\nimport AdminCustomerCards from \"../../Admin/Admin-CustomerArea/AdminCustomerCards/AdminCustomerCards\";\nimport AdminCustomerDetails from \"../../Admin/Admin-CustomerArea/AdminCustomerDetails/AdminCustomerDetails\";\nimport Terms from \"../../LayoutArea/Terms/Terms\";\nimport About from \"../../SharedArea/About/About\";\n\nfunction Routing(): JSX.Element {\n \n    return (\n        <div className=\"Routing\">\n\t\t\t <Switch>\n\n                <Route path = '/home' component={Home} exact/>\n                <Route path = '/terms' component={Terms} exact/>\n                <Route path = '/about' component={About} exact/>\n                \n\n                <Route path = '/coupons' component={CouponCards} exact/>\n                <Route path = '/coupons/details/:id' component={CouponDetails} exact/>\n\n                <Route path = '/signup' component={SignUp} exact/>\n                <Route path = '/companySignUp' component={CompanySignUp} exact/>\n                <Route path = '/customerSignUp' component={CustomerSignUp} exact/>\n\n                <Route path = '/login' component={Login} exact/>\n                <Route path = '/logout' component={Logout} exact/>\n\n                <Route path = '/admin' component={AdminCompanyCards} exact/> \n                <Route path = '/admin/addCompany' component={AddCompany} exact/> \n                <Route path = '/admin/addCustomer' component={AddCustomer} exact/> \n\n                <Route path = '/admin/companies' component={AdminCompanyCards} exact/>\n                <Route path = '/admin/customers' component={AdminCustomerCards} exact/>\n                <Route path = '/admin/companies/details/:id' component={AdminCompanyDetails} exact/>\n                <Route path = '/admin/customers/details/:id' component={AdminCustomerDetails} exact/>\n\n                <Route path = '/company' component={CompanyCouponCards} exact/>\n                <Route path = '/company/coupons' component={CompanyCouponCards} exact/>\n                <Route path = '/company/coupons/details/:id' component={CompanyCouponDetails} exact/>\n                <Route path = '/company/addcoupon' component={AddCoupon} exact/>\n\n                <Route path = '/customer' component={CustomerCouponCards} exact/>\n                <Route path = '/customer/coupons' component={CustomerCouponCards} exact/>\n                <Route path = '/customer/coupons/details/:id' component={CustomerCouponDetails} exact/>\n                <Route path = '/customer/purchase' component={CouponCards} exact/>\n\n                <Redirect from='/' to='home' exact/>\n                <Redirect from='' to='home' exact/>\n                <Redirect from='/*' to='home' exact/>\n                <Route component={Page404} exact/>\n\n            </Switch>\n        </div>\n    );\n};\n\nexport default Routing;\n","import { useEffect, useState } from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport store from \"../../../Redux/Store\";\nimport CountDownTimer from \"../../../Services/CountDownTimer\";\nimport \"./AuthMenu.css\";\n\nconst AuthMenu = ():JSX.Element=>{\n  \n  const [client,setClient] = useState(store.getState().authLoginState.client);\n  \n  useEffect(()=> {\n      if(client){\n        <CountDownTimer hours={0} minutes={30} seconds={30}/>\n        };\n        const unsubscribe = store.subscribe(() => {\n        setClient(store.getState().authLoginState.client);\n      return unsubscribe;\n     });\n  });\n\nreturn (\n    <div className=\"AuthMenu\">\n        {client && (\n          <>\n            <span id=\"darkgrey1\"> Welcome {client.clientName}</span>\n            <span> | </span>\n            <NavLink to=\"/logout\" className=\"normal\" activeClassName=\"active\">Logout</NavLink>\n          </>\n        )}\n\n        {!client && (\n          <>\n            <span id=\"darkgrey1\">Hello guest</span>\n            <span> | </span>\n            <NavLink to=\"/login\" className=\"normal\" activeClassName=\"active\">Login</NavLink>\n            <span> | </span>\n            <NavLink to=\"/signup\" className=\"normal\" activeClassName=\"active\">SignUp</NavLink>\n          </>\n        )}\n    </div>\n    );\n  };\n\nexport default AuthMenu;","import React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./IndexNavbar.css\"\nimport ClientType from \"../../../models/ClientTypeModel\";\nimport store from \"../../../Redux/Store\";\nimport AuthMenu from \"../AuthMenu/AuthMenu\";\nimport {\n  Collapse,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem,\n  UncontrolledDropdown,\n  NavbarBrand,\n  Navbar,\n  Nav,\n  Container,\n  Row,\n  Col,\n  UncontrolledTooltip,\n} from \"reactstrap\";\n\nexport default function IndexNavbar(){\n  const[client,setClient] = useState(store.getState().authLoginState.client);\n  const [collapseOpen, setCollapseOpen] = React.useState(false);\n  const [collapseOut, setCollapseOut] = React.useState(\"\");\n  const [color, setColor] = React.useState(\"navbar-transparent\");\n  \t\n\tuseEffect(()=>{\n\t\tconst unsubscribe = store.subscribe(() => {\n\t\t\tsetClient(store.getState().authLoginState.client);\n\t\t\treturn unsubscribe;\n\t\t});\n\t});\n\n  React.useEffect(() => {\n      window.addEventListener(\"scroll\", changeColor);\n      return function cleanup() {\n      window.removeEventListener(\"scroll\", changeColor);\n    };\n  },[]);\n\n  const changeColor = () => {\n    if (\n      document.documentElement.scrollTop > 99 ||\n      document.body.scrollTop > 99\n    ) {\n      setColor(\"bg-info\");\n    } else if (\n      document.documentElement.scrollTop < 100 ||\n      document.body.scrollTop < 100\n    ) {\n      setColor(\"navbar-transparent\");\n    };\n  };\n\n  const toggleCollapse = () => {\n    document.documentElement.classList.toggle(\"nav-open\");\n    setCollapseOpen(!collapseOpen);\n  };\n  const onCollapseExiting = () => {\n    setCollapseOut(\"collapsing-out\");\n  };\n  const onCollapseExited = () => {\n    setCollapseOut(\"\");\n  };\n \nreturn (\n    <Navbar className={\"fixed-top \" + color} color-on-scroll=\"100\" expand=\"lg\">\n      <Container>\n        <div className=\"navbar-translate\">\n\n          <NavbarBrand to=\"/\" exact=\"true\" tag={Link} id=\"navbar-brand\">\n            <span>Click 'n' Save ◉ </span>Coupons\n          </NavbarBrand>\n\n          <UncontrolledTooltip placement=\"bottom\" target=\"navbar-brand\">\n            Designed and Coded by Mijael Rofe\n          </UncontrolledTooltip>\n\n            <button\n              aria-expanded={collapseOpen}\n              className=\"navbar-toggler navbar-toggler\"\n              onClick={toggleCollapse}\n            >\n              <span className=\"navbar-toggler-bar bar1\" />\n              <span className=\"navbar-toggler-bar bar2\" />\n              <span className=\"navbar-toggler-bar bar3\" />\n            </button>\n\n        </div>\n\n            <Collapse\n              className={\"justify-content-end \" + collapseOut}\n              navbar\n              isOpen={collapseOpen}\n              onExiting={onCollapseExiting}\n              onExited={onCollapseExited}\n            >\n\n          <div className=\"navbar-collapse-header\">\n            <Row>\n              <Col className=\"collapse-brand\" xs=\"6\">\n                <a href=\"#pablo\" onClick={(e) => e.preventDefault()}>\n                  Click 'n' Save\n                </a>\n              </Col>\n\n              <Col className=\"collapse-close text-right\" xs=\"6\">\n                <button\n                  aria-expanded={collapseOpen}\n                  className=\"navbar-toggler\"\n                  onClick={toggleCollapse}\n                >\n                  <i className=\"tim-icons icon-simple-remove\" />\n                </button>\n              </Col>\n              \n            </Row>\n          </div>\n\n          <Nav navbar>\n            <UncontrolledDropdown id=\"DropDownMenu\" nav>\n              <DropdownToggle id=\"DropDownMenu\"\n                caret\n                color=\"default\"\n                data-toggle=\"dropdown\"\n                href=\"#pablo\"\n                nav\n                onClick={(e) => e.preventDefault()}\n              >\n                <i className=\"fa fa-cogs d-lg-none d-xl-none\" />\n                  Menu\n              </DropdownToggle>\n        \n              <DropdownMenu className=\"dropdown-with-icons\">\n              {!client?\n                <>\n                  <DropdownItem id=\"DropdownItem\" tag={Link} to = \"/home\" exact=\"true\">Home</DropdownItem>\n                  <DropdownItem id=\"DropdownItem\" tag={Link} to = \"/coupons\" exact=\"true\">All coupons</DropdownItem>\n                  <DropdownItem id=\"DropdownItem\" tag={Link} to = \"/about\" exact=\"true\">About</DropdownItem>\n                </>\n\t\t\t\t      : client.clientType===ClientType.admin?\n                <>\n                  <DropdownItem id=\"DropdownItem\" tag={Link} to = \"/admin/companies\" exact=\"true\">AdminCompanies</DropdownItem>\n                  <DropdownItem id=\"DropdownItem\" tag={Link}  to =\"/admin/customers\" exact=\"true\">AdminCustomers</DropdownItem>\n                  <DropdownItem id=\"DropdownItem\" tag={Link}  to = \"/home\" exact=\"true\">Home</DropdownItem>\n                  <DropdownItem id=\"DropdownItem\" tag={Link} to = \"/about\" exact=\"true\">About</DropdownItem>\n                </>\n\t\t\t\t      :client.clientType===ClientType.company ? \n                <>\n                  <DropdownItem id=\"DropdownItem\" tag={Link}  to = \"/company/coupons\" exact=\"true\">Company-Coupons</DropdownItem>   \n                  <DropdownItem id=\"DropdownItem\" tag={Link}  to = \"/home\" exact=\"true\">Home</DropdownItem>\n                  <DropdownItem id=\"DropdownItem\" tag={Link} to = \"/about\" exact=\"true\">About</DropdownItem>\n                </>\n\t\t\t\t      : client.clientType===ClientType.customer ? \n                <>\n                <DropdownItem id=\"DropdownItem\" tag={Link}  to = \"/customer\" exact=\"true\">Coupons</DropdownItem>\n                <DropdownItem id=\"DropdownItem\"  tag={Link} to =\"/customer/purchase\" exact=\"true\">Purchase-coupons</DropdownItem>\n                <DropdownItem id=\"DropdownItem\" tag={Link}  to = \"/home\" exact=\"true\">Home</DropdownItem>\n                <DropdownItem id=\"DropdownItem\" tag={Link} to = \"/about\" exact=\"true\">About</DropdownItem>\n                </>\n\t\t\t        :null\n\t\t\t        }\n              \n                  </DropdownMenu>\n                </UncontrolledDropdown>\n              \n              <AuthMenu/>\n\n          </Nav>\n        </Collapse>\n      </Container>\n    </Navbar>\n  );\n};\n","import { Container } from \"reactstrap\";\n\nexport default function PageHeader() {\n  return (\n    <div className=\"page-header header-filter\">\n      <div className=\"squares square1\" />\n      <div className=\"squares square2\" />\n      <div className=\"squares square3\" />\n      <div className=\"squares square4\" />\n      <div className=\"squares square5\" />\n      <div className=\"squares square6\" />\n      <div className=\"squares square7\" />\n        <Container >\n        <div className=\"content-center brand\">\n            <h1 className=\"h1-seo\">Click 'n' Save</h1>\n            <h3 className=\"d-none d-sm-block\">\n            Coupon-Management-System for getting coupons\n            </h3>\n          </div>\n        </Container>\n    </div>\n  );\n};\n","import React from \"react\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport Routing from \"../../HomeArea/Routing/Routing\";\nimport IndexNavbar from \"../Navbars/IndexNavbar\";\nimport PageHeader from \"../PageHeader/PageHeader\";\nimport \"./Layout.css\";\n\nfunction Layout(): JSX.Element {\n    React.useEffect(() => {\n        document.body.classList.toggle(\"index-page\");\n          return function cleanup() {\n            document.body.classList.toggle(\"index-page\");\n        };\n      },[]);\n\nreturn (\n  <>\n    <BrowserRouter>\n        <IndexNavbar />\n          <div className=\"wrapper\">\n             <PageHeader />\n                <div className=\"main\">\n                  <Routing/>\n                </div>\n          </div>\n    </BrowserRouter>\n  </>\n    );\n};\n\nexport default Layout;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Layout from './Components/LayoutArea/Layout/Layout';\nimport reportWebVitals from './reportWebVitals';\nimport \"./assets/css/nucleo-icons.css\";\nimport \"./assets/scss/blk-design-system-react.scss?v=1.2.0\";\nimport \"./assets/demo/demo.css\";\nimport './index.css';\n\n\n\n\nReactDOM.render(\n    <React.Fragment>\n        <Layout/>\n    </React.Fragment>,\ndocument.getElementById('root')\n);\n\nreportWebVitals();\n","export default __webpack_public_path__ + \"static/media/square-purple-1.ed3a5e38.png\";"],"sourceRoot":""}